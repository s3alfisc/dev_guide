[{"path":"index.html","id":"section","chapter":"","heading":"","text":"\nFigure 0.1: cover image\n work licensed Creative Commons Attribution-NonCommercial-ShareAlike 3.0 United States License. Refer Zenodo DOI cite .can also read PDF version book.","code":"@software{ropensci_2021_6619350,\n  author       = {rOpenSci and\n                  Anderson, Brooke and\n                  Chamberlain, Scott and\n                  DeCicco, Laura and\n                  Gustavsen, Julia and\n                  Krystalli, Anna and\n                  Lepore, Mauro and\n                  Mullen, Lincoln and\n                  Ram, Karthik and\n                  Ross, Noam and\n                  Salmon, Maëlle and\n                  Vidoni, Melina and\n                  Riederer, Emily and\n                  Sparks, Adam and\n                  Hollister, Jeff},\n  title        = {{rOpenSci Packages: Development, Maintenance, and \n                   Peer Review}},\n  month        = nov,\n  year         = 2021,\n  publisher    = {Zenodo},\n  version      = {0.7.0},\n  doi          = {10.5281/zenodo.6619350},\n  url          = {https://doi.org/10.5281/zenodo.6619350}\n}"},{"path":"preface.html","id":"preface","chapter":"Preface","heading":"Preface","text":"Welcome! book guide authors, maintainers, reviewers editors rOpenSci.first section book contains guidelines creating testing R packages.second section dedicated rOpenSci’s software peer review process: , policies, specific guides authors, editors reviewers throughout process. statistical software review, refer project webpage resources.third last section features best practice nurturing package onboarded: collaborate developers, document releases, promote package leverage GitHub development platform. third section also features chapter anyone wishing start contributing rOpenSci packages.hope ’ll find guide useful clear, welcome suggestions issue tracker book. Happy R packaging!rOpenSci editorial team.book living document.\ncan view updates best practices policies via release notes.\ncan cite book using Zenodo metadata DOI.want contribute book (suggestions, corrections) please refer GitHub repository particular contributing guidelines. Thanks!thankful authors, reviewers guest editors helping us improve system guide years. Thanks also following persons made contributions guide previous incarnations: Katrin Leinweber, John Baumgartner, François Michonneau, Christophe Dervieux, Lorenzo Busetto, Ben Marwick, Nicholas Horton, Chris Kennedy, Mark Padgham, Jeroen Ooms, Sean Hughes, Jan Gorecki, Joseph Stachelek, Dean Attali, Julia Gustavsen, Nicholas Tierney, Rich FitzJohn, Tiffany Timbers, Hilmar Lapp, Miles McBain, Bryce Mecum, Jonathan Carroll, Carl Boettiger, Florian Privé, Stefanie Butland, Daniel Possenriede, Hadley Wickham, Mauro Lepore, Matthew Fidler, Luke McGuinness, Aaron Wolen, Indrajeet Patil, Kevin Wright, Landau, Hugo Gruson,\nHao Ye,\nSébastien Rochette. Please tell us forgot acknowledge contribution!","code":"@software{ropensci_2021_6619350,\n  author       = {rOpenSci and\n                  Anderson, Brooke and\n                  Chamberlain, Scott and\n                  DeCicco, Laura and\n                  Gustavsen, Julia and\n                  Krystalli, Anna and\n                  Lepore, Mauro and\n                  Mullen, Lincoln and\n                  Ram, Karthik and\n                  Ross, Noam and\n                  Salmon, Maëlle and\n                  Vidoni, Melina and\n                  Riederer, Emily and\n                  Sparks, Adam and\n                  Hollister, Jeff},\n  title        = {{rOpenSci Packages: Development, Maintenance, and \n                   Peer Review}},\n  month        = nov,\n  year         = 2021,\n  publisher    = {Zenodo},\n  version      = {0.7.0},\n  doi          = {10.5281/zenodo.6619350},\n  url          = {https://doi.org/10.5281/zenodo.6619350}\n}"},{"path":"building.html","id":"building","chapter":"1 Packaging Guide","heading":"1 Packaging Guide","text":"\nrOpenSci accepts packages meet guidelines via streamlined Software Peer Review process. ensure consistent style across tools written chapter highlighting guidelines package development. Please also read apply chapter continuous integration (CI). guidance review process provided third section book starting chapter collaboration.\n\nstrongly recommend package developers read Hadley Wickham Jenny Bryan’s concise thorough book package development available free online. guide partially redundant resources highlights rOpenSci’s guidelines.\n\nread submitting package rOpenSci worth effort meet guidelines, look reasons submit.\n","code":""},{"path":"building.html","id":"package-name-and-metadata","chapter":"1 Packaging Guide","heading":"1.1 Package name and metadata","text":"","code":""},{"path":"building.html","id":"naming-your-package","chapter":"1 Packaging Guide","heading":"1.1.1 Naming your package","text":"strongly recommend short, descriptive names lower case. package deals one commercial services, please make sure name violate branding guidelines. can check package name available, informative offensive using available package. particular, choose package name ’s already used CRAN Bioconductor.strongly recommend short, descriptive names lower case. package deals one commercial services, please make sure name violate branding guidelines. can check package name available, informative offensive using available package. particular, choose package name ’s already used CRAN Bioconductor.unique package name might easier track (us assess package use) search (users find google questions). Obviously unique package name might make package less discoverable (e.g. might argument naming package geojson).unique package name might easier track (us assess package use) search (users find google questions). Obviously unique package name might make package less discoverable (e.g. might argument naming package geojson).Find interesting aspects naming package blog post Nick Tierney, case change mind, find rename package blog post Nick’s.Find interesting aspects naming package blog post Nick Tierney, case change mind, find rename package blog post Nick’s.","code":""},{"path":"building.html","id":"creating-metadata-for-your-package","chapter":"1 Packaging Guide","heading":"1.1.2 Creating metadata for your package","text":"recommend use codemetar package creating updating JSON CodeMeta metadata file package via codemetar::write_codemeta(). automatically include useful information, including GitHub topics. CodeMeta uses Schema.org terms gains popularity JSON metadata package might used third-party services, maybe even search engines.","code":""},{"path":"building.html","id":"platforms","chapter":"1 Packaging Guide","heading":"1.2 Platforms","text":"Packages run major platforms (Windows, macOS, Linux). Exceptions may granted packages interact system-specific functions, wrappers utilities operate limited platforms, authors make every effort cross-platform compatibility, including system-specific compilation, containerization external utilities.","code":""},{"path":"building.html","id":"package-api","chapter":"1 Packaging Guide","heading":"1.3 Package API","text":"","code":""},{"path":"building.html","id":"function-and-argument-naming","chapter":"1 Packaging Guide","heading":"1.3.1 Function and argument naming","text":"Functions arguments naming chosen work together form common, logical programming API easy read, auto-complete.\nConsider object_verb() naming scheme functions package take common data type interact common API. object refers data/API verb primary action. scheme helps avoid namespace conflicts packages may similar verbs, makes code readable easy auto-complete. instance, stringi, functions starting stri_ manipulate strings (stri_join(), stri_sort(), googlesheets functions starting gs_ calls Google Sheets API (gs_auth(), gs_user(), gs_download()).\nFunctions arguments naming chosen work together form common, logical programming API easy read, auto-complete.Consider object_verb() naming scheme functions package take common data type interact common API. object refers data/API verb primary action. scheme helps avoid namespace conflicts packages may similar verbs, makes code readable easy auto-complete. instance, stringi, functions starting stri_ manipulate strings (stri_join(), stri_sort(), googlesheets functions starting gs_ calls Google Sheets API (gs_auth(), gs_user(), gs_download()).functions manipulate object/data return object/data type, make object/data first argument function enhance compatibility pipe operator (%>%).functions manipulate object/data return object/data type, make object/data first argument function enhance compatibility pipe operator (%>%).strongly recommend snake_case styles unless porting package already wide use.strongly recommend snake_case styles unless porting package already wide use.Avoid function name conflicts base packages popular ones (e.g. ggplot2, dplyr, magrittr, data.table)Avoid function name conflicts base packages popular ones (e.g. ggplot2, dplyr, magrittr, data.table)Argument naming order consistent across functions use similar inputs.Argument naming order consistent across functions use similar inputs.Package functions importing data import data global environment, instead must return objects. Assignments global environment avoided general.Package functions importing data import data global environment, instead must return objects. Assignments global environment avoided general.","code":""},{"path":"building.html","id":"console-messages","chapter":"1 Packaging Guide","heading":"1.3.2 Console messages","text":"Use message() warning() communicate user functions. Please use print() cat() unless ’s print.*() str.*() methods, methods printing messages harder user suppress.","code":""},{"path":"building.html","id":"interactivegraphical-interfaces","chapter":"1 Packaging Guide","heading":"1.3.3 Interactive/Graphical Interfaces","text":"providing graphical user interface (GUI) (Shiny app), facilitate workflow, include mechanism automatically reproduce steps taken GUI. include auto-generation code reproduce outcomes, output intermediate values produced interactive tool, simply clear well-documented mapping GUI actions scripted functions. (See also “Testing” .)tabulizer package e.g. interactive workflow extract tables, can also extract coordinates one can re-run things script. Besides, two examples shiny apps code generation https://gdancik.shinyapps.io/shinyGEO/, https://github.com/wallaceEcoMod/wallace/.","code":""},{"path":"building.html","id":"code-style","chapter":"1 Packaging Guide","heading":"1.4 Code Style","text":"information style code, name functions, R scripts inside R/ folder, recommend reading code chapter R Packages book. recommend styler package automating part code styling. suggest reading Tidyverse style guide.information style code, name functions, R scripts inside R/ folder, recommend reading code chapter R Packages book. recommend styler package automating part code styling. suggest reading Tidyverse style guide.can choose use = <- long consistent one choice within package. recommend avoiding use -> assignment within package. use <- throughout package, also use R6 package, ’ll forced use = assignment within R6Class construction - considered inconsistency can’t use <- case.can choose use = <- long consistent one choice within package. recommend avoiding use -> assignment within package. use <- throughout package, also use R6 package, ’ll forced use = assignment within R6Class construction - considered inconsistency can’t use <- case.","code":""},{"path":"building.html","id":"citation-file","chapter":"1 Packaging Guide","heading":"1.5 CITATION file","text":"package yet CITATION file, can create one usethis::use_citation(), populate values generated citation() function.archive release GitHub repo Zenodo, add Zenodo top-level DOI CITATION file.one day review rOpenSci publish software publication package, add CITATION file.Less related package supports : package wraps particular resource data source , say, statistical algorithm, remind users cite resource via e.g. citHeader(). Maybe even add reference resource.example see nasapower CITATION file refers manual paper.\nlacks Zenodo DOI manual – although users probably end citing JOSS paper.also create store CITATION.cff thanks cffr package. also provides GitHub Action workflow keep CITATION.cff file --date.","code":"\ncitHeader(\"While nasapower does not redistribute the data in any way,\\n\",\n          \"we encourage users to follow the requests of the POWER\\n\",\n          \"Project Team:\\n\",\n          \"\\n\",\n          \"'When POWER data products are used in a publication, we\\n\",\n          \"request the following acknowledgment be included:\\n\",\n          \"These data were obtained from the NASA Langley Research\\n\",\n          \"Center POWER Project funded through the NASA Earth Science\\n\",\n          \"Directorate Applied Science Program.'\\n\",\n          \"\\n\",\n          \"To cite nasapower in publications, please use:\")\ncitEntry(\n  entry = \"Article\",\n  author = as.person(\"Adam H Sparks\"),\n  title = \"nasapower: A NASA POWER Global Meteorology, Surface Solar Energy and Climatology Data Client for R\",\n  doi = \"10.21105/joss.01035\",\n  year = 2018,\n  month = \"oct\",\n  publisher = \"The Open Journal\",\n  volume = 3,\n  number = 30,\n  pages = 1035,\n  journal = \"The Journal of Open Source Software\",\n  textVersion = paste(\"Sparks, Adam (2018). nasapower: A NASA POWER Global Meteorology, Surface Solar Energy and Climatology Data Client for R. Journal of Open Source Software, 3(30), 1035, https://doi.org/10.21105/joss.01035\"))\nyear <- sub(\"-.*\", \"\", meta$Date)\nnote <- sprintf(\"R package version %s\", meta$Version)\nbibentry(bibtype = \"Manual\",\n         title = \"{nasapower}: NASA-POWER Data from R\",\n         author = c(person(\"Adam\", \"Sparks\")),\n         year = year,\n         note = note,\n     url = \"https://CRAN.R-project.org/package=nasapower\")\n textVersion = paste0(\"Adam H Sparks, (\", year, \").\",\n  \" nasapower: A NASA POWER Global Meteorology, Surface Solar Energy and Climatology Data Client for R. \",\n  note, \".\",\n  \" https://CRAN.R-project.org/package=nasapower\")"},{"path":"building.html","id":"readme","chapter":"1 Packaging Guide","heading":"1.6 README","text":"packages README file, named README.md, root repository. README include, top bottom:\npackage name.\nBadges continuous integration test coverage, badge rOpenSci peer-review started (see ), repostatus.org badge, badges (e.g. R-universe). README many badges, might want consider using table badges, see example, one one. table wide high.\nShort description goals package, descriptive links vignettes (rendered, .e. readable, cf documentation website section) unless package small ’s one vignette repeating README.\nInstallation instructions using e.g. remotes package, pak package, R-universe.\nadditional setup required (authentication tokens, etc).\nBrief demonstration usage.\napplicable, package compares similar packages /relates packages.\nCitation information .e. Direct users preferred citation README adding boilerplate text “’s cite package”. See e.g. ecmwfr README.\npackages README file, named README.md, root repository. README include, top bottom:package name.Badges continuous integration test coverage, badge rOpenSci peer-review started (see ), repostatus.org badge, badges (e.g. R-universe). README many badges, might want consider using table badges, see example, one one. table wide high.Short description goals package, descriptive links vignettes (rendered, .e. readable, cf documentation website section) unless package small ’s one vignette repeating README.Installation instructions using e.g. remotes package, pak package, R-universe.additional setup required (authentication tokens, etc).Brief demonstration usage.applicable, package compares similar packages /relates packages.Citation information .e. Direct users preferred citation README adding boilerplate text “’s cite package”. See e.g. ecmwfr README.use another repo status badge lifecycle badge, please also add repostatus.org badge. Example repo README two repo status badges.submitted package passed editor checks, add peer-review badge viawhere issue_id number issue software-review repository. instance, badge rtimicropem review uses number 126 since ’s review issue number. badge first indicated “review” “peer-reviewed” package onboarded (issue labelled “approved” closed), link review issue.README many badges consider ordering html table make easier newcomers gather information glance. See examples drake repo qualtRics repo. Possible sections \nDevelopment (CI statuses cf CI chapter, Slack channel discussion, repostatus)\nRelease/Published (CRAN version release date badges METACRAN, CRAN checks API badge, Zenodo badge)\nStats/Usage (downloads e.g. download badges METACRAN)\ntable wide long order mask rest README.\nREADME many badges consider ordering html table make easier newcomers gather information glance. See examples drake repo qualtRics repo. Possible sections areDevelopment (CI statuses cf CI chapter, Slack channel discussion, repostatus)Release/Published (CRAN version release date badges METACRAN, CRAN checks API badge, Zenodo badge)Stats/Usage (downloads e.g. download badges METACRAN)\ntable wide long order mask rest README.package connects data source online service, wraps software, consider package README may first point entry users. provide enough information users understand nature data, service, software, provide links relevant data documentation. instance,\nREADME merely read, “Provides access GooberDB,” also include,\n“…, online repository Goober sightings South America. \ninformation GooberDB, documentation database structure metadata\ncan found link”.package connects data source online service, wraps software, consider package README may first point entry users. provide enough information users understand nature data, service, software, provide links relevant data documentation. instance,\nREADME merely read, “Provides access GooberDB,” also include,\n“…, online repository Goober sightings South America. \ninformation GooberDB, documentation database structure metadata\ncan found link”.recommend creating README.md directly, README.Rmd file (R Markdown file) demonstration code. advantage .Rmd file can combine text code can easily updated whenever package updated.recommend creating README.md directly, README.Rmd file (R Markdown file) demonstration code. advantage .Rmd file can combine text code can easily updated whenever package updated.Consider using usethis::use_readme_rmd() get template README.Rmd file automatically set pre-commit hook ensure README.md always newer README.Rmd.Consider using usethis::use_readme_rmd() get template README.Rmd file automatically set pre-commit hook ensure README.md always newer README.Rmd.Extensive examples kept vignette. want make vignettes accessible installing package, suggest creating website package.Extensive examples kept vignette. want make vignettes accessible installing package, suggest creating website package.Add code conduct contribution guidelines.Add code conduct contribution guidelines.See gistr README good example README follow small package, bowerbird README good example README larger package.See gistr README good example README follow small package, bowerbird README good example README larger package.","code":"[![](https://badges.ropensci.org/<issue_id>_status.svg)](https://github.com/ropensci/software-review/issues/<issue_id>)"},{"path":"building.html","id":"documentation","chapter":"1 Packaging Guide","heading":"1.7 Documentation","text":"","code":""},{"path":"building.html","id":"general","chapter":"1 Packaging Guide","heading":"1.7.1 General","text":"exported package functions fully documented examples.exported package functions fully documented examples.potential overlap confusion packages providing similar functionality similar name, add note README, main vignette potentially Description field DESCRIPTION. Example rtweet README, rebird README.potential overlap confusion packages providing similar functionality similar name, add note README, main vignette potentially Description field DESCRIPTION. Example rtweet README, rebird README.package contain top-level documentation ?foobar, (?`foobar-package` naming conflict). Optionally, can use ?foobar ?`foobar-package` package level manual file, using @aliases roxygen tag. usethis::use_package_doc() adds template top-level documentation.package contain top-level documentation ?foobar, (?`foobar-package` naming conflict). Optionally, can use ?foobar ?`foobar-package` package level manual file, using @aliases roxygen tag. usethis::use_package_doc() adds template top-level documentation.package contain least one HTML vignette providing substantial coverage package functions, illustrating realistic use cases functions intended interact. package small, vignette README may similar content.package contain least one HTML vignette providing substantial coverage package functions, illustrating realistic use cases functions intended interact. package small, vignette README may similar content.case README, top-level documentation vignettes may first point entry users. package connects data source online service, wraps software, provide enough information users understand nature data, service, software, provide links relevant data documentation. instance, vignette intro documentation merely read, “Provides access GooberDB,” also include, “…, online repository Goober sightings South America. information GooberDB, documentation database structure metadata can found link”. vignette outline prerequisite knowledge able understand vignette upfront.case README, top-level documentation vignettes may first point entry users. package connects data source online service, wraps software, provide enough information users understand nature data, service, software, provide links relevant data documentation. instance, vignette intro documentation merely read, “Provides access GooberDB,” also include, “…, online repository Goober sightings South America. information GooberDB, documentation database structure metadata can found link”. vignette outline prerequisite knowledge able understand vignette upfront.general vignette present series examples progressing complexity basic advanced usage.Functionality likely used advanced users developers might better put separate vignette (e.g. programming/NSE dplyr).Functionality likely used advanced users developers might better put separate vignette (e.g. programming/NSE dplyr).README, top-level package docs, vignettes, websites, etc., enough information beginning get high-level overview package services/data connects , provide navigation relevant pieces documentation. follow principle multiple points entry .e. take account fact piece documentation may first encounter user package /tool/data wraps.README, top-level package docs, vignettes, websites, etc., enough information beginning get high-level overview package services/data connects , provide navigation relevant pieces documentation. follow principle multiple points entry .e. take account fact piece documentation may first encounter user package /tool/data wraps.vignette(s) include citations software papers appropriate.vignette(s) include citations software papers appropriate.package provides access data source, require DESCRIPTION contains (1) brief identification /description organisation responsible issuing data; (2) URL linking public-facing page providing, describing, enabling data access (may often differ URL leading directly data source).package provides access data source, require DESCRIPTION contains (1) brief identification /description organisation responsible issuing data; (2) URL linking public-facing page providing, describing, enabling data access (may often differ URL leading directly data source).use package startup messages necessary (function masking instance). Avoid package startup messages like “foobar 2.4-0” citation guidance can annoying user. Rely documentation guidance.use package startup messages necessary (function masking instance). Avoid package startup messages like “foobar 2.4-0” citation guidance can annoying user. Rely documentation guidance.can choose README section use cases package (packages, blog posts, etc.), example.can choose README section use cases package (packages, blog posts, etc.), example.","code":""},{"path":"building.html","id":"roxygen2-use","chapter":"1 Packaging Guide","heading":"1.7.2 roxygen2 use","text":"request submissions use roxygen2 documentation. roxygen2 R package automatically compiles .Rd files man folder package simple tags written function.request submissions use roxygen2 documentation. roxygen2 R package automatically compiles .Rd files man folder package simple tags written function.information using roxygen2 documentation available R packages book.information using roxygen2 documentation available R packages book.writing Rd hand, Rd2roxygen package contains functions convert Rd roxygen documentation.writing Rd hand, Rd2roxygen package contains functions convert Rd roxygen documentation.One key advantage using roxygen2 NAMESPACE always automatically generated date.One key advantage using roxygen2 NAMESPACE always automatically generated date.functions document type object returned @return heading.functions document type object returned @return heading.Documentation support user navigation including useful cross-links related functions documenting related functions together groups common help pages. @seealso @family tags (latter automatically creates “See also” links can help group functions together pkgdown sites), recommended purpose. See “manual” section R Packages book “function grouping” section present chapter details.Documentation support user navigation including useful cross-links related functions documenting related functions together groups common help pages. @seealso @family tags (latter automatically creates “See also” links can help group functions together pkgdown sites), recommended purpose. See “manual” section R Packages book “function grouping” section present chapter details.re-use documentation pieces (e.g. details authentication, related packages) across vignettes/README/man pages. possible approach use R Markdown fragments, relying knitr use child documents can store re-used parts folder man/, call README vignette well man pages using @includeRmd tag available roxygen 0.7.0.re-use documentation pieces (e.g. details authentication, related packages) across vignettes/README/man pages. possible approach use R Markdown fragments, relying knitr use child documents can store re-used parts folder man/, call README vignette well man pages using @includeRmd tag available roxygen 0.7.0.Add #' @noRd internal functions.Add #' @noRd internal functions.prefer clutter code extensive documentation, can place examples outside R script use @example tag; place documentation files man-roxygen folder root package, combined manual file use @template <file name>, example.\nPut documentation object .R file man-roxygen folder (root package). example, file. Link template file function (e.g.) @template keyword (e.g.). contents template inserted documentation built resulting .Rd file users see ask documentation function.\nNote using markdown documentation, markdown currently doesn’t work template files, make sure use latex formatting.\ncases can ignore templates man-roxygen, two cases leveraging greatly help:\nlot documentation function/class/object separating certain chunks documentation can keep .R source file tidy. especially useful lot code .R file. hand, means docs readable “-source” since ’re another file.\ndocumentation parts used across many .R functions ’s helpful use template. reduces duplicated text, helps prevent mistakenly updating documentation one function . Using template file parameter documentation alternative defining parameter one function using @inheritParams functions using parameter.\n\nprefer clutter code extensive documentation, can place examples outside R script use @example tag; place documentation files man-roxygen folder root package, combined manual file use @template <file name>, example.Put documentation object .R file man-roxygen folder (root package). example, file. Link template file function (e.g.) @template keyword (e.g.). contents template inserted documentation built resulting .Rd file users see ask documentation function.Note using markdown documentation, markdown currently doesn’t work template files, make sure use latex formatting.cases can ignore templates man-roxygen, two cases leveraging greatly help:\nlot documentation function/class/object separating certain chunks documentation can keep .R source file tidy. especially useful lot code .R file. hand, means docs readable “-source” since ’re another file.\ndocumentation parts used across many .R functions ’s helpful use template. reduces duplicated text, helps prevent mistakenly updating documentation one function . Using template file parameter documentation alternative defining parameter one function using @inheritParams functions using parameter.\nlot documentation function/class/object separating certain chunks documentation can keep .R source file tidy. especially useful lot code .R file. hand, means docs readable “-source” since ’re another file.documentation parts used across many .R functions ’s helpful use template. reduces duplicated text, helps prevent mistakenly updating documentation one function . Using template file parameter documentation alternative defining parameter one function using @inheritParams functions using parameter.Starting roxygen2 version 7.0.0, R6 classes officially supported. See roxygen2 docs details document R6 classes.Starting roxygen2 version 7.0.0, R6 classes officially supported. See roxygen2 docs details document R6 classes.","code":""},{"path":"building.html","id":"urls-in-documentation","chapter":"1 Packaging Guide","heading":"1.7.3 URLs in documentation","text":"subsection particularly relevant authors wishing submit package CRAN.\nCRAN check URLs documentation allow redirect status codes 301.\ncan use urlchecker package reproduce checks , particular, replace URLs URLs redirect .\nOthers used option escape URLs (change <https://ropensci.org/> https://ropensci.org/, \\url{https://ropensci.org/} https://ropensci.org/.), , need implement sort URL checking prevent getting broken without noticing. Furthermore, links clickable local docs.","code":""},{"path":"building.html","id":"website","chapter":"1 Packaging Guide","heading":"1.8 Documentation website","text":"recommend creating documentation website package using pkgdown. Neal Richardson wrote good tutorial get started pkgdown, unsurprisingly pkgdown documentation website.elements ’d like underline .","code":""},{"path":"building.html","id":"docsropensci","chapter":"1 Packaging Guide","heading":"1.8.1 Automatic deployment of the documentation website","text":"need worry automatic deployment website approval transfer package repo ropensci organization; indeed, pkgdown website built package push GitHub repo. can find status builds https://dev.ropensci.org/job/package_name, e.g. magick; website https://docs.ropensci.org/package_name, e.g. magick. website build use pkgdown config file one, except styling use rotemplate package. resulting website local search bar. Please report bugs, questions feature requests central builds https://github.com/ropensci/docs/ template https://github.com/ropensci/rotemplate/.package vignettes need credentials (API keys, tokens, etc.) knit, might want precompute since credentials used docs server.submission transfer, use approach documented pkgdown tic package automatic deployment package’s website. save hassle running (remembering run) pkgdown::build_site() every time site needs updated. First refer chapter continuous integration ’re familiar continuous integration. case, forget update occurrences website URL transfer ropensci organization.","code":""},{"path":"building.html","id":"function-grouping","chapter":"1 Packaging Guide","heading":"1.8.2 Grouping functions in the reference","text":"package many functions, use grouping reference, can less automatically.use roxygen2 version 6.1.1, use @family tag functions documentation indicate grouping. give links functions local documentation installed package (“See also” section) allow use pkgdown has_concept function config file website. Non-rOpenSci example courtesy optiRum: family tag, pkgdown config file resulting reference section.\ncustomize text cross-reference title created roxygen2 ({family}:), refer roxygen2 docs regarding provide rd_family_title list man/roxygen/meta.R.Less automatically, see example drake website associated config file.","code":""},{"path":"building.html","id":"branding-of-authors","chapter":"1 Packaging Guide","heading":"1.8.3 Branding of authors","text":"can make names () authors clickable adding URL, can even replace names logo (think rOpenSci… organisation/company!). See pkgdown documentation.","code":""},{"path":"building.html","id":"tweaking-the-navbar","chapter":"1 Packaging Guide","heading":"1.8.4 Tweaking the navbar","text":"can make website content easier browse tweaking navbar, refer pkgdown documentation. particular, note name main vignette package “pkg-name.Rmd”, ’ll accessible navbar Get started link instead via Articles > Vignette Title.","code":""},{"path":"building.html","id":"mathjax","chapter":"1 Packaging Guide","heading":"1.8.5 Mathjax","text":"package transferred gets website using pkgdown template, want use Mathjax ’ll need specify pkgdown config file like :","code":"template:\n  params:\n    mathjax: true"},{"path":"building.html","id":"package-logo","chapter":"1 Packaging Guide","heading":"1.8.6 Package logo","text":"use package logo pkgdown homepage, refer usethis::use_logo().\npackage doesn’t logo, rOpenSci docs builder use rOpenSci logo instead.","code":""},{"path":"building.html","id":"authorship","chapter":"1 Packaging Guide","heading":"1.9 Authorship","text":"DESCRIPTION file package list package authors contributors package, using Authors@R syntax indicate roles (author/creator/contributor etc.) one author, using comment field indicate ORCID ID author, one (cf post). See section “Writing R Extensions” details. feel reviewers made substantial contribution development package, may list Authors@R field Reviewer contributor type (\"rev\"), like :include reviewers asking consent. Read blog post “Thanking Reviewers: Gratitude Semantic Metadata”. Please list editors contributors. participation contribution rOpenSci thanks enough!","code":"    person(\"Bea\", \"Hernández\", role = \"rev\",\n    comment = \"Bea reviewed the package (v. X.X.XX) for rOpenSci, see <https://github.com/ropensci/software-review/issues/116>\"),"},{"path":"building.html","id":"authorship-included-code","chapter":"1 Packaging Guide","heading":"1.9.1 Authorship of included code","text":"Many packages include code software. Whether entire files single functions included packages, rOpenSci packages follow CRAN Repository Policy:ownership copyright intellectual property rights components package must clear unambiguous (including authors specification DESCRIPTION file). code copied (derived) work others (including R ), care must taken copyright/license statements preserved authorship misrepresented.Preferably, ‘Authors@R’ field used ‘ctb’ roles authors code. Alternatively, ‘Author’ field list authors contributors.copyrights held entity package authors, preferably indicated via ‘cph’ roles ‘Authors@R’ field, using ‘Copyright’ field (necessary referring inst/COPYRIGHTS file).Trademarks must respected.","code":""},{"path":"building.html","id":"licence","chapter":"1 Packaging Guide","heading":"1.10 Licence","text":"package needs CRAN OSI accepted license.\nexplanations around licensing, refer R packages book.","code":""},{"path":"building.html","id":"testing","chapter":"1 Packaging Guide","heading":"1.11 Testing","text":"packages pass R CMD check/devtools::check() major platforms.packages pass R CMD check/devtools::check() major platforms.packages test suite covers major functionality package. tests also cover behavior package case errors.packages test suite covers major functionality package. tests also cover behavior package case errors.good practice write unit tests functions, package code general, ensuring key functionality covered. Test coverage 75% likely require additional tests explanation sent review.good practice write unit tests functions, package code general, ensuring key functionality covered. Test coverage 75% likely require additional tests explanation sent review.recommend using testthat writing tests. Strive write tests write new function. serves obvious need proper testing package, allows think various ways function can fail, defensively code . information.recommend using testthat writing tests. Strive write tests write new function. serves obvious need proper testing package, allows think various ways function can fail, defensively code . information.Tests easy understand. suggest reading blog post “Good Developers Write Bad Unit Tests” Michael Lynch.Tests easy understand. suggest reading blog post “Good Developers Write Bad Unit Tests” Michael Lynch.Packages Shiny apps use unit-testing framework shinytest test interactive interfaces behave expected.Packages Shiny apps use unit-testing framework shinytest test interactive interfaces behave expected.testing functions creating plots, suggest using vdiffr, extension testthat package; testthat snapshot tests.testing functions creating plots, suggest using vdiffr, extension testthat package; testthat snapshot tests.package interacts web resources (web APIs sources data web) might find HTTP testing R book Scott Chamberlain Maëlle Salmon relevant. Packages helping HTTP testing (corresponding HTTP clients):\nhttptest2 (httr2);\nhttptest (httr);\nvcr (httr, crul);\nwebfakes (httr, httr2, crul, curl).\npackage interacts web resources (web APIs sources data web) might find HTTP testing R book Scott Chamberlain Maëlle Salmon relevant. Packages helping HTTP testing (corresponding HTTP clients):httptest2 (httr2);httptest (httr);vcr (httr, crul);webfakes (httr, httr2, crul, curl).testthat function skip_on_cran() can use run tests CRAN. recommend using functions API calls since quite likely fail CRAN. tests still run continuous integration. Note testthat 3.1.2 skip_if_offline() automatically calls skip_on_cran(). info CRAN preparedness API wrappers.testthat function skip_on_cran() can use run tests CRAN. recommend using functions API calls since quite likely fail CRAN. tests still run continuous integration. Note testthat 3.1.2 skip_if_offline() automatically calls skip_on_cran(). info CRAN preparedness API wrappers.package interacts database might find dittodb useful.package interacts database might find dittodb useful.’ve set continuous interaction (CI), use package’s code coverage report (cf section book) identify untested lines, add tests.’ve set continuous interaction (CI), use package’s code coverage report (cf section book) identify untested lines, add tests.Even use continuous integration, recommend run tests locally prior submitting package, tests often skipped (may need set Sys.setenv(NOT_CRAN=\"true\") order ensure tests run). addition, recommend prior submitting package, use MangoTheCat’s goodpractice package check package likely sources errors, run spelling::spell_check_package() find spelling errors documentation.Even use continuous integration, recommend run tests locally prior submitting package, tests often skipped (may need set Sys.setenv(NOT_CRAN=\"true\") order ensure tests run). addition, recommend prior submitting package, use MangoTheCat’s goodpractice package check package likely sources errors, run spelling::spell_check_package() find spelling errors documentation.","code":""},{"path":"building.html","id":"examples","chapter":"1 Packaging Guide","heading":"1.12 Examples","text":"Include extensive examples documentation. addition demonstrating use package, can act easy way test package functionality proper tests. However, keep mind require tests contributed packages.Include extensive examples documentation. addition demonstrating use package, can act easy way test package functionality proper tests. However, keep mind require tests contributed packages.can run examples devtools::run_examples(). Note run R CMD CHECK equivalent (e.g., devtools::check()) examples wrapped \\dontrun{} \\donttest{} run. Refer summary table roxygen2 docs.can run examples devtools::run_examples(). Note run R CMD CHECK equivalent (e.g., devtools::check()) examples wrapped \\dontrun{} \\donttest{} run. Refer summary table roxygen2 docs.safe-guard examples (e.g. requiring authentication) run CRAN need use \\dontrun{}. However, first submission CRAN won’t let examples escaped . case might add small toy examples, wrap example code try(). Also refer @exampleIf tag present, time writing, roxygen2 development version.safe-guard examples (e.g. requiring authentication) run CRAN need use \\dontrun{}. However, first submission CRAN won’t let examples escaped . case might add small toy examples, wrap example code try(). Also refer @exampleIf tag present, time writing, roxygen2 development version.addition running examples locally computer, strongly advise run examples one continuous integration systems. , examples wrapped \\dontrun{} \\donttest{} run, can configure continuous integration builds run via R CMD check arguments --run-dontrun /--run-donttest.addition running examples locally computer, strongly advise run examples one continuous integration systems. , examples wrapped \\dontrun{} \\donttest{} run, can configure continuous integration builds run via R CMD check arguments --run-dontrun /--run-donttest.","code":""},{"path":"building.html","id":"pkgdependencies","chapter":"1 Packaging Guide","heading":"1.13 Package dependencies","text":"Use Imports instead Depends packages providing functions packages. Make sure list packages used testing (testthat), documentation (knitr, roxygen2) Suggests section package dependencies (use usethis adding testing infrastructure via usethis::use_testthat() vignette via usethis::use_vignette(), necessary packages added DESCRIPTION). use package examples tests package, make sure list Suggests, already listed Imports.Use Imports instead Depends packages providing functions packages. Make sure list packages used testing (testthat), documentation (knitr, roxygen2) Suggests section package dependencies (use usethis adding testing infrastructure via usethis::use_testthat() vignette via usethis::use_vignette(), necessary packages added DESCRIPTION). use package examples tests package, make sure list Suggests, already listed Imports.(Bioconductor) package depends Bioconductor packages, make sure installation instructions README vignette clear enough even user familiar Bioconductor release cycle.\nuser use BiocManager (recommended)? Document .\nautomatic installation Bioconductor packages install.packages() enough? case, mention user needs run setRepositories() haven’t set necessary Bioconductor repositories yet.\npackage depends Bioconductor certain version, mention DESCRIPTION installation instructions.\n(Bioconductor) package depends Bioconductor packages, make sure installation instructions README vignette clear enough even user familiar Bioconductor release cycle.user use BiocManager (recommended)? Document .user use BiocManager (recommended)? Document .automatic installation Bioconductor packages install.packages() enough? case, mention user needs run setRepositories() haven’t set necessary Bioconductor repositories yet.automatic installation Bioconductor packages install.packages() enough? case, mention user needs run setRepositories() haven’t set necessary Bioconductor repositories yet.package depends Bioconductor certain version, mention DESCRIPTION installation instructions.package depends Bioconductor certain version, mention DESCRIPTION installation instructions.Specifying minimum dependencies (e.g. glue (>= 1.3.0) instead just glue) conscious choice. know fact package break certain dependency version, specify explicitly.\ndon’t, need specify minimum dependency. case user reports bug explicitly related older version dependency address .\nexample bad practice developer consider versions current state dependencies minimal version. needlessly force everyone upgrade (causing issues packages) good reason behind version choice.Specifying minimum dependencies (e.g. glue (>= 1.3.0) instead just glue) conscious choice. know fact package break certain dependency version, specify explicitly.\ndon’t, need specify minimum dependency. case user reports bug explicitly related older version dependency address .\nexample bad practice developer consider versions current state dependencies minimal version. needlessly force everyone upgrade (causing issues packages) good reason behind version choice.cases must expose functions dependencies user, import re-export individual functions rather listing Depends fields. instance, functions package produce raster objects, might re-export printing plotting functions raster package.cases must expose functions dependencies user, import re-export individual functions rather listing Depends fields. instance, functions package produce raster objects, might re-export printing plotting functions raster package.package uses system dependency, \nIndicate DESCRIPTION;\nCheck listed sysreqsdb allow automatic tools install , submit contribution ;\nCheck configure script (example) give helpful error message found (example).\nconfigure scripts can challenging often require hacky solutions\nmake diverse system dependencies work across systems. Use examples () starting point note common encounter bugs edge cases often violate CRAN policies. hesitate ask help forum.\npackage uses system dependency, shouldIndicate DESCRIPTION;Indicate DESCRIPTION;Check listed sysreqsdb allow automatic tools install , submit contribution ;Check listed sysreqsdb allow automatic tools install , submit contribution ;Check configure script (example) give helpful error message found (example).\nconfigure scripts can challenging often require hacky solutions\nmake diverse system dependencies work across systems. Use examples () starting point note common encounter bugs edge cases often violate CRAN policies. hesitate ask help forum.Check configure script (example) give helpful error message found (example).\nconfigure scripts can challenging often require hacky solutions\nmake diverse system dependencies work across systems. Use examples () starting point note common encounter bugs edge cases often violate CRAN policies. hesitate ask help forum.Consider trade-offs involved relying package dependency. one hand,\nusing dependencies reduces coding effort, can build useful functionality developed \nothers, especially dependency performs complex tasks, high-performance,\n/well vetted tested. hand, many dependencies\nplaces burden maintainer keep changes packages, risk\npackage’s long-term sustainability. also\nincreases installation time size, primarily consideration others’ development cycle, automated build systems. “Heavy” packages - many dependencies , large amounts compiled code - increase cost. approaches reducing\ndependencies:\nSmall, simple functions dependency package may better copied \npackage dependency using functions\notherwise large heavy dependency. (See Authorship section\nacknowledge original authors\ncopied code.) hand, complex functions many edge\ncases (e.g. parsers) require considerable testing vetting.\ncommon example returning tidyverse-style “tibbles” package\nfunctions provide data.\nOne can avoid modestly heavy tibble package dependency returning\ntibble created modifying data frame like :\nclass(df) <- c(\"tbl_df\", \"tbl\", \"data.frame\") \n(Note approach universally endorsed.)\n\nEnsure using package function defined,\nrather one re-exported. instance many functions devtools can found smaller specialty packages sessioninfo. %>% function\nimported magrittr, defined, rather heavier\ndplyr, re-exports .\ndependencies preferred provide easier interpret\nfunction names syntax base R solutions. primary\nreason using function heavy dependency, consider wrapping\nbase R approach nicely-named internal function package. See e.g. rlang R script providing functions syntax similar purrr functions.\ndependencies overlapping functionality, see can rely one.\ndependency-management tips can found post \nScott Chamberlain.\nConsider trade-offs involved relying package dependency. one hand,\nusing dependencies reduces coding effort, can build useful functionality developed \nothers, especially dependency performs complex tasks, high-performance,\n/well vetted tested. hand, many dependencies\nplaces burden maintainer keep changes packages, risk\npackage’s long-term sustainability. also\nincreases installation time size, primarily consideration others’ development cycle, automated build systems. “Heavy” packages - many dependencies , large amounts compiled code - increase cost. approaches reducing\ndependencies:Small, simple functions dependency package may better copied \npackage dependency using functions\notherwise large heavy dependency. (See Authorship section\nacknowledge original authors\ncopied code.) hand, complex functions many edge\ncases (e.g. parsers) require considerable testing vetting.\ncommon example returning tidyverse-style “tibbles” package\nfunctions provide data.\nOne can avoid modestly heavy tibble package dependency returning\ntibble created modifying data frame like :\nclass(df) <- c(\"tbl_df\", \"tbl\", \"data.frame\") \n(Note approach universally endorsed.)\nSmall, simple functions dependency package may better copied \npackage dependency using functions\notherwise large heavy dependency. (See Authorship section\nacknowledge original authors\ncopied code.) hand, complex functions many edge\ncases (e.g. parsers) require considerable testing vetting.common example returning tidyverse-style “tibbles” package\nfunctions provide data.\nOne can avoid modestly heavy tibble package dependency returning\ntibble created modifying data frame like :\nclass(df) <- c(\"tbl_df\", \"tbl\", \"data.frame\") \n(Note approach universally endorsed.)common example returning tidyverse-style “tibbles” package\nfunctions provide data.\nOne can avoid modestly heavy tibble package dependency returning\ntibble created modifying data frame like :(Note approach universally endorsed.)Ensure using package function defined,\nrather one re-exported. instance many functions devtools can found smaller specialty packages sessioninfo. %>% function\nimported magrittr, defined, rather heavier\ndplyr, re-exports .Ensure using package function defined,\nrather one re-exported. instance many functions devtools can found smaller specialty packages sessioninfo. %>% function\nimported magrittr, defined, rather heavier\ndplyr, re-exports .dependencies preferred provide easier interpret\nfunction names syntax base R solutions. primary\nreason using function heavy dependency, consider wrapping\nbase R approach nicely-named internal function package. See e.g. rlang R script providing functions syntax similar purrr functions.dependencies preferred provide easier interpret\nfunction names syntax base R solutions. primary\nreason using function heavy dependency, consider wrapping\nbase R approach nicely-named internal function package. See e.g. rlang R script providing functions syntax similar purrr functions.dependencies overlapping functionality, see can rely one.dependencies overlapping functionality, see can rely one.dependency-management tips can found post \nScott Chamberlain.dependency-management tips can found post \nScott Chamberlain.","code":"class(df) <- c(\"tbl_df\", \"tbl\", \"data.frame\") "},{"path":"building.html","id":"recommended-scaffolding","chapter":"1 Packaging Guide","heading":"1.14 Recommended scaffolding","text":"HTTP requests recommend using curl, crul, httr httr2 RCurl. like low level clients HTTP, curl best, whereas crul httr better higher level access. crul maintained rOpenSci. recommend rOpenSci maintained packages webmockr mocking HTTP requests, vcr caching HTTP requests package tests.HTTP requests recommend using curl, crul, httr httr2 RCurl. like low level clients HTTP, curl best, whereas crul httr better higher level access. crul maintained rOpenSci. recommend rOpenSci maintained packages webmockr mocking HTTP requests, vcr caching HTTP requests package tests.parsing JSON, use jsonlite instead rjson RJSONIO.parsing JSON, use jsonlite instead rjson RJSONIO.parsing, creating, manipulating XML, strongly recommend xml2 cases. can refer Daniel Nüst’s notes migration XML xml2.parsing, creating, manipulating XML, strongly recommend xml2 cases. can refer Daniel Nüst’s notes migration XML xml2.spatial data, sp package considered deprecated favor sf, packages rgdal, maptools, rgeos retired end 2023. recommend use spatial suites developed r-spatial rspatial communities. See GitHub issue relevant discussions.spatial data, sp package considered deprecated favor sf, packages rgdal, maptools, rgeos retired end 2023. recommend use spatial suites developed r-spatial rspatial communities. See GitHub issue relevant discussions.","code":""},{"path":"building.html","id":"version-control","chapter":"1 Packaging Guide","heading":"1.15 Version Control","text":"package source files version control, specifically tracked Git. might find gert package relevant, well usethis Git/GitHub related functionality; can however use git want.package source files version control, specifically tracked Git. might find gert package relevant, well usethis Git/GitHub related functionality; can however use git want.Make sure list “scrap” .DS_Store files .gitignore. might find gitignore package relevant.Make sure list “scrap” .DS_Store files .gitignore. might find gitignore package relevant.later section book contains git workflow tips.later section book contains git workflow tips.","code":""},{"path":"building.html","id":"crangotchas","chapter":"1 Packaging Guide","heading":"1.16 Miscellaneous CRAN gotchas","text":"collection CRAN gotchas worth avoiding outset.Make sure package title Title Case.put period end title.put ‘R’ ‘R’ title obvious packages hosted CRAN. like information displayed website nonetheless, check pkgdown documentation learn override .Avoid starting description package name “package …”.Make sure include links websites wrap web API, scrape data site, etc. Description field DESCRIPTION file. URLs enclosed angle brackets, e.g. <https://www.r-project.org>.Title Description fields, names packages external software must quoted using single quotes (e.g., ‘Rcpp’ Integration ‘Armadillo’ Templated Linear Algebra Library).Avoid long running tests examples. Consider testthat::skip_on_cran tests skip things take long time still test locally continuous integration.Include top-level files paper.md, continuous integration configuration files, .Rbuildignore file.","code":""},{"path":"building.html","id":"cranchecks","chapter":"1 Packaging Guide","heading":"1.16.1 CRAN checks","text":"package CRAN, regularly checked different platforms. Failures checks, false positives, can lead CRAN team’s reaching . can monitor state CRAN checks viathe foghorn package.foghorn package.CRAN checks API maintained rOpenSci, provides badges.CRAN checks API maintained rOpenSci, provides badges.","code":""},{"path":"building.html","id":"bioconductor-gotchas","chapter":"1 Packaging Guide","heading":"1.17 Bioconductor gotchas","text":"intend package submitted , package , Bioconductor, refer Bioconductor packaging guidelines.","code":""},{"path":"building.html","id":"further-guidance","chapter":"1 Packaging Guide","heading":"1.18 Further guidance","text":"submitting package rOpenSci via software-review repo, can direct questions rOpenSci team issue tracker, discussion forum.submitting package rOpenSci via software-review repo, can direct questions rOpenSci team issue tracker, discussion forum.submitting package use goodpractice package (goodpractice::gp()) guide improve package, since exceptions need justified. E.g. use foo might generally bad therefore flagged goodpractice good reason use package.submitting package use goodpractice package (goodpractice::gp()) guide improve package, since exceptions need justified. E.g. use foo might generally bad therefore flagged goodpractice good reason use package.Read, incorporate, act advice Collaboration Guide chapter.Read, incorporate, act advice Collaboration Guide chapter.","code":""},{"path":"building.html","id":"learning-about-package-development","chapter":"1 Packaging Guide","heading":"1.18.1 Learning about package development","text":"","code":""},{"path":"building.html","id":"books","chapter":"1 Packaging Guide","heading":"1.18.1.1 Books","text":"Hadley Wickham Jenny Bryan’s R packages book excellent, readable resource package development available free online (print – link former version Hadley Wickham new version published yet June 2022).Hadley Wickham Jenny Bryan’s R packages book excellent, readable resource package development available free online (print – link former version Hadley Wickham new version published yet June 2022).Writing R Extensions canonical, usually --date, reference creating R packages.Writing R Extensions canonical, usually --date, reference creating R packages.Mastering Software Development R Roger D. Peng, Sean Kross, Brooke Anderson.Mastering Software Development R Roger D. Peng, Sean Kross, Brooke Anderson.Advanced R Hadley WickhamAdvanced R Hadley Wickham","code":""},{"path":"building.html","id":"tutorials","chapter":"1 Packaging Guide","heading":"1.18.1.2 Tutorials","text":"Hilary Parker’s famous blog post Writing R package scratch updated version Tomas Westlake shows efficiently using usethis.Hilary Parker’s famous blog post Writing R package scratch updated version Tomas Westlake shows efficiently using usethis.workflow description Emil Hvitfeldt.workflow description Emil Hvitfeldt.pictorial Matthew J Denny.pictorial Matthew J Denny.","code":""},{"path":"building.html","id":"blogs","chapter":"1 Packaging Guide","heading":"1.18.1.3 Blogs","text":"R-hub blog.R-hub blog.posts rOpenSci blog e.g. “precompute package vignettes pkgdown articles”.posts rOpenSci blog e.g. “precompute package vignettes pkgdown articles”.Package Development Corner section rOpenSci newsletter.Package Development Corner section rOpenSci newsletter.posts tidyverse blog e.g. “Upgrading testthat edition 3”.posts tidyverse blog e.g. “Upgrading testthat edition 3”.","code":""},{"path":"building.html","id":"moocs","chapter":"1 Packaging Guide","heading":"1.18.1.4 MOOCs","text":"Coursera specialization corresponding book Roger Peng, Sean Kross Brooke Anderson, course specifically R packages.","code":""},{"path":"ci.html","id":"ci","chapter":"2 Continuous Integration Best Practices","heading":"2 Continuous Integration Best Practices","text":"\nchapter summarizes guidelines continuous integration explaining continuous integration .\n\nAlong last chapter, forms guidelines Software Peer Review.\n","code":""},{"path":"ci.html","id":"why-use-continuous-integration-ci","chapter":"2 Continuous Integration Best Practices","heading":"2.1 Why use continuous integration (CI)?","text":"rOpenSci packages must use one form continuous integration. ensures commits, pull requests new branches run R CMD check. rOpenSci packages’ continuous integration must also linked code coverage service, indicating many lines covered unit tests.test status code coverage reported via badges package README.R packages CI operating systems (Linux, Mac OSX, Windows) contain:Compiled codeCompiled codeJava dependenciesJava dependenciesDependencies languagesDependencies languagesPackages system callsPackages system callsText munging getting people’s names (order find encoding issues).Text munging getting people’s names (order find encoding issues).Anything file system / path callsAnything file system / path callsIn case doubt regarding applicability criteria package, ’s better add CI operating systems. CI services standards setups R packages allow much hassle.","code":""},{"path":"ci.html","id":"whichci","chapter":"2 Continuous Integration Best Practices","heading":"2.2 Which continuous integration service(s)?","text":"number continuous integration services, including standalone services (CircleCI, AppVeyor), others integrated code hosting related services (GitHub Actions, GitLab, AWS Code Pipeline). Different services support different operating system configurations.GitHub Actions convenient option many R developers already use GitHub integrated platform supports needed operating Systems. actions supported R ecosystem, well first-class support {usethis} package. packages submitted rOpenSci peer review checked pkgcheck system, described Guide Authors. checks also provided GitHub Action ropensci-review-tools/pkgcheck-action repository. Packages authors encouraged use action confirm prior submission package passes checks. See blog post information.usethis supports CI setup systems, though functions soft-deprecated. rOpenSci also supports circle package, aids setting CircleCI pipelines, tic package building complicated CI pipelines.","code":""},{"path":"ci.html","id":"testing-using-different-versions-of-r","chapter":"2 Continuous Integration Best Practices","heading":"2.2.0.1 Testing using different versions of R","text":"require rOpenSci packages tested latest, previous development versions R ensure backwards forwards compatibility base R.Details run tests/checks using different versions R locally can found R-hub vignette running Local Linux checks Docker.can fine tune deployment tests versions using testing matrix.develop package depending intended Bioconductor, might find biocthis relevant.","code":""},{"path":"ci.html","id":"minimizing-build-times-on-ci","chapter":"2 Continuous Integration Best Practices","heading":"2.2.0.2 Minimizing build times on CI","text":"can use tips minimize build time CI:Cache installation packages. default r-lib/actions .","code":""},{"path":"ci.html","id":"travis-ci-linux-and-mac-osx","chapter":"2 Continuous Integration Best Practices","heading":"2.2.1 Travis CI (Linux and Mac OSX)","text":"recommend moving away Travis.","code":""},{"path":"ci.html","id":"appveyor-ci-windows","chapter":"2 Continuous Integration Best Practices","heading":"2.2.2 AppVeyor CI (Windows)","text":"continuous integration Windows, see R + AppVeyor. Set using usethis::use_appveyor().tips minimize AppVeyor build time:Cache installation packages. Example config file. ’ll already config file set AppVeyor CI using usethis::use_appveyor().Cache installation packages. Example config file. ’ll already config file set AppVeyor CI using usethis::use_appveyor().Enable rolling builds.Enable rolling builds.longer transfer AppVeyor projects ropensci AppVeyor account transfer repo rOpenSci’s “ropensci” GitHub organization badge [![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/github/ropensci/pkgname?branch=master&svg=true)](https://ci.appveyor.com/project/individualaccount/pkgname).","code":""},{"path":"ci.html","id":"circle-ci-linux-and-mac-osx","chapter":"2 Continuous Integration Best Practices","heading":"2.2.3 Circle CI (Linux and Mac OSX)","text":"Circle CI used, example, rOpenSci package bomrang continuous integration service.","code":""},{"path":"ci.html","id":"coverage","chapter":"2 Continuous Integration Best Practices","heading":"2.3 Test coverage","text":"Continuous integration also include reporting test coverage via testing service Codecov Coveralls. See README covr package instructions, well\nusethis::use_coverage().run coverage several CI services results merged.","code":""},{"path":"ci.html","id":"even-more-ci-opencpu","chapter":"2 Continuous Integration Best Practices","heading":"2.4 Even more CI: OpenCPU","text":"transfer rOpenSci’s “ropensci” GitHub organization, push repo built OpenCPU person committing receive notification email. additional CI service package authors allows R functions packages called remotely via https://ropensci.ocpu.io/ using opencpu API. details service, consult OpenCPU help page also indicates ask questions.","code":""},{"path":"ci.html","id":"rodocsci","chapter":"2 Continuous Integration Best Practices","heading":"2.5 Even more CI: rOpenSci docs","text":"transfer rOpenSci’s “ropensci” GitHub organization, pkgdown website built package push GitHub repo. can find status builds https://dev.ropensci.org/job/package_name, e.g. magick; website https://docs.ropensci.org/package_name, e.g. magick. website build use pkgdown config file one, except styling use rotemplate package. Please report bugs, questions feature requests central builds https://github.com/ropensci/docs/ template https://github.com/ropensci-org/rotemplate/.","code":""},{"path":"package-development-security-best-practices.html","id":"package-development-security-best-practices","chapter":"3 Package Development Security Best Practices","heading":"3 Package Development Security Best Practices","text":"\nwork--progress chapter includes guidance managing secrets packages links reading.\n","code":""},{"path":"package-development-security-best-practices.html","id":"miscellaneous","chapter":"3 Package Development Security Best Practices","heading":"3.1 Miscellaneous","text":"recommend article Ten quick tips staying safe online Danielle Smalls Greg Wilson.","code":""},{"path":"package-development-security-best-practices.html","id":"github-access-security","chapter":"3 Package Development Security Best Practices","heading":"3.2 GitHub access security","text":"recommend secure GitHub account two-factor (authentication) 2FA. compulsory ropensci GitHub organization members outside collaborators make sure enable package approved.recommend secure GitHub account two-factor (authentication) 2FA. compulsory ropensci GitHub organization members outside collaborators make sure enable package approved.also recommend regularly check access package repository, prune unused access (former collaborators).also recommend regularly check access package repository, prune unused access (former collaborators).","code":""},{"path":"package-development-security-best-practices.html","id":"https","chapter":"3 Package Development Security Best Practices","heading":"3.3 https","text":"web service package wraps either https http, opt https.","code":""},{"path":"package-development-security-best-practices.html","id":"pkgsecrets","chapter":"3 Package Development Security Best Practices","heading":"3.4 Secrets in packages","text":"section contains guidance develop package interacting web resource requiring credentials (API keys, tokens, etc.). Also refer httr vignette sharing secrets.","code":""},{"path":"package-development-security-best-practices.html","id":"secrets-in-packages-and-user-protection","chapter":"3 Package Development Security Best Practices","heading":"3.4.1 Secrets in packages and user protection","text":"Say package needs API key making requests behalf users package.package documentation, guide user API key doesn’t end .Rhistory/script users package.\nEncourage use environment variables store API key (even remove possibility pass argument functions?). link intro startup files usethis::edit_r_environ().\npackage depend , encourage use , keyring help user store variables specific OS’ credential stores (secure .Renviron): .e. ’d create function setting key, another one retrieving key; user write Sys.setenv(SUPERSECRETKEY = keyring::key_get(\"myservice\")) beginning script.\nprint API key even verbose mode message, warning, error.\npackage documentation, guide user API key doesn’t end .Rhistory/script users package.Encourage use environment variables store API key (even remove possibility pass argument functions?). link intro startup files usethis::edit_r_environ().Encourage use environment variables store API key (even remove possibility pass argument functions?). link intro startup files usethis::edit_r_environ().package depend , encourage use , keyring help user store variables specific OS’ credential stores (secure .Renviron): .e. ’d create function setting key, another one retrieving key; user write Sys.setenv(SUPERSECRETKEY = keyring::key_get(\"myservice\")) beginning script.package depend , encourage use , keyring help user store variables specific OS’ credential stores (secure .Renviron): .e. ’d create function setting key, another one retrieving key; user write Sys.setenv(SUPERSECRETKEY = keyring::key_get(\"myservice\")) beginning script.print API key even verbose mode message, warning, error.print API key even verbose mode message, warning, error.GitHub issue template, stated share credentials. user package accidentally shares credentials issue, make sure ’re aware can revoke key (.e. ask explicitly answer whether realized shared key).GitHub issue template, stated share credentials. user package accidentally shares credentials issue, make sure ’re aware can revoke key (.e. ask explicitly answer whether realized shared key).","code":""},{"path":"package-development-security-best-practices.html","id":"secrets-in-packages-and-development","chapter":"3 Package Development Security Best Practices","heading":"3.4.2 Secrets in packages and development","text":"’ll need protect secrets protect secrets users, ’s take account keep mind.","code":""},{"path":"package-development-security-best-practices.html","id":"secrets-and-recorded-requests-in-tests","chapter":"3 Package Development Security Best Practices","heading":"3.4.2.1 Secrets and recorded requests in tests","text":"use vcr httptest tests caching API responses, need make sure recorded requests / fixtures contain secrets. Refer vcr security guidance httptest guidance “Redacting Modifying Recorded Requests”, inspect recorded requests / fixtures committing first time sure got setup right.vcr rOpenSci package, can post question might rOpenSci forum.","code":""},{"path":"package-development-security-best-practices.html","id":"share-secrets-with-ci-services","chapter":"3 Package Development Security Best Practices","heading":"3.4.2.2 Share secrets with CI services","text":"Now, might need share secrets continuous integration services.store API keys environment variables / secrets, referring docs CI service.details workflow advice, refer gargle article “Managing tokens securely” security chapter HTTP testing R book.Document steps made CONTRIBUTING.md , say new maintainer, can remember next time.","code":""},{"path":"package-development-security-best-practices.html","id":"secrets-and-collaborations","chapter":"3 Package Development Security Best Practices","heading":"3.4.2.3 Secrets and collaborations","text":"pull requests external contributors? Tests using secrets fail unless use sort mocked/cached response, might want skip depending context. instance, CI account create environment variable called THIS_IS_ME skip tests based presence variable. obviously means PR checks CI exhaustive, ’ll need check PR locally run tests.Document behavior package external PRs CONTRIBUTING.md sake people making PRs people reviewing (weeks, authors package).","code":""},{"path":"package-development-security-best-practices.html","id":"secrets-and-cran","chapter":"3 Package Development Security Best Practices","heading":"3.4.3 Secrets and CRAN","text":"CRAN, skip tests (skip_on_cran()) examples (dontrun) requiring credentials.Precompute vignettes requiring credentials.","code":""},{"path":"package-development-security-best-practices.html","id":"furthersecreading","chapter":"3 Package Development Security Best Practices","heading":"3.5 Further reading","text":"Useful security resources:rOpenSci community call “Security R” (recording, slides, etc. see particular list resources);rOpenSci community call “Security R” (recording, slides, etc. see particular list resources);security-related projects unconf18;security-related projects unconf18;notary package;notary package;gargle article “Managing tokens securely”gargle article “Managing tokens securely”","code":""},{"path":"softwarereviewintro.html","id":"softwarereviewintro","chapter":"4 Software Peer Review, Why? What?","heading":"4 Software Peer Review, Why? What?","text":"\nchapter contains general intro software peer review system packages, reasons submit package, reasons volunteer reviewer, reviews open, acknowledgements actors system.\n\nsystem recently expanded statistical software peer-review.\n\nuse standards/checklists etc. reviewing software elsewhere, tell recipients (e.g. journal editors, students, internal code review) came rOpenSci, tell us public forum, privately email.\n","code":""},{"path":"softwarereviewintro.html","id":"whatissoftwarereview","chapter":"4 Software Peer Review, Why? What?","heading":"4.1 What is rOpenSci Software Peer Review?","text":"rOpenSci’s suite packages partly contributed staff members partly contributed community members, means suite stems great diversity skills experience developers. ensure quality whole set? ’s software peer review comes play: packages contributed community undergo transparent, constructive, non adversarial open review process. process relying mostly volunteer work, associate editors manage incoming flow ensure progress submissions; authors create, submit improve package; reviewers, two per submission, examine software code user experience. blog post written rOpenSci editors good introduction rOpenSci software peer review blog posts review reviewed packages can find via “software-peer-review” tag rOpenSci blog.can recognize rOpenSci packages peer-reviewed via green “peer-reviewed” badge README, linking reviews (cf example); via blue comment icon near description rOpenSci packages page, also linking reviews.Technically, make GitHub infrastructure: package review process issue ropensci/software-review GitHub repository. instance, click read review thread ropenaq package: process ongoing conversation acceptance package, two external reviews important milestones. Furthermore, use GitHub features use issue templates (submission templates), labelling use track progress submissions (editor checks approval).","code":""},{"path":"softwarereviewintro.html","id":"whysubmit","chapter":"4 Software Peer Review, Why? What?","heading":"4.2 Why submit your package to rOpenSci?","text":"First, foremost, hope submit package review value feedback. aim provide useful feedback package authors review process open, non-adversarial, focused improving software quality.aboard, package continue receive support rOpenSci members. ’ll retain ownership control package, can help ongoing maintenance issues associated updates R dependencies CRAN policies.rOpenSci promote package webpage, blog, social media. Packages suite also get documentation website automatically built deployed push.rOpenSci packages can cross-listed repositories CRAN BioConductor.rOpenSci packages scope Journal Open-Source Software add necessary accompanying short paper, , discretion JOSS editors, benefit fast-tracked review process.write one, rOpenSci promote gitbooks related package: source books can transferred ropensci-books GitHub organisation books listed books.ropensci.org.","code":""},{"path":"softwarereviewintro.html","id":"whyreview","chapter":"4 Software Peer Review, Why? What?","heading":"4.3 Why review packages for rOpenSci?","text":"peer-review process, hope choose review give back rOpenSci scientific communities. mission expand access scientific data promote culture reproducible research possible volunteer efforts community members like .Review two-way conversation. reviewing packages, ’ll chance continue learn development practices authors reviewers.open nature review process allows network meet colleagues collaborators review process. community friendly filled supportive members expert R development many areas science scientific computing.volunteer one reviewers, fill short form providing contact information areas expertise. always looking reviewers general package-writing experience domain expertise fields packages used.","code":""},{"path":"softwarereviewintro.html","id":"whyopen","chapter":"4 Software Peer Review, Why? What?","heading":"4.4 Why are reviews open?","text":"reviewing threads public. Authors, reviewers, editors know ’s identities. broader community can view even participate conversation happens. provides incentive thorough provide non-adversarial, constructive reviews. authors reviewers report enjoy learn open direct exchange. also benefit building community. Participants opportunity meaningfully network new peers, new collaborations emerged via ideas spawned review process.aware open systems can drawbacks. instance, traditional academic review, double-blind peer review can increase representation female authors, suggesting bias non-blind reviews. also possible reviewers less critical open review. However, posit openness review conversation provides check review quality bias; ’s harder inject unsupported subjective comments public without cover anonymity. Ultimately, believe direct public communication authors reviewers improves quality fairness reviews.Furthermore, authors reviewers ability contact privately editors doubt question.","code":""},{"path":"softwarereviewintro.html","id":"how-will-users-know-a-package-has-been-reviewed","chapter":"4 Software Peer Review, Why? What?","heading":"4.5 How will users know a package has been reviewed?","text":"package README feature peer-review badge linking software review thread.package get docs.ropensci.org docs website can link DESCRIPTION.package repo transferred rOpenSci organization.reviewers agree listed DESCRIPTION, metadata mention review.","code":""},{"path":"softwarereviewintro.html","id":"editors-and-reviewers","chapter":"4 Software Peer Review, Why? What?","heading":"4.6 Editors and reviewers","text":"","code":""},{"path":"softwarereviewintro.html","id":"associateditors","chapter":"4 Software Peer Review, Why? What?","heading":"4.6.1 Associate editors","text":"rOpenSci’s Software Peer Review process run :Noam Ross, EcoHealth AllianceKarthik Ram, rOpenSciMaëlle Salmon, rOpenSciMark Padgham, rOpenSciAnna Krystalli, University Sheffield RSEMelina Vidoni, RMIT University (School Science)Mauro Lepore, 2 Degrees Investing InitiativeLaura DeCicco, USGSJulia Gustavsen, AgroscopeEmily Riederer, Capital OneAdam Sparks, Department Primary Industries Regional DevelopmentJeff Hollister, US Environmental Protection Agency","code":""},{"path":"softwarereviewintro.html","id":"reviewers","chapter":"4 Software Peer Review, Why? What?","heading":"4.6.2 Reviewers","text":"grateful following individuals offered time expertise review packages submitted rOpenSci.Sam Albers · Toph Allen · Kaique dos S. Alves · Brooke Anderson · Alison Appling · Zebulun Arendsee · Taylor Arnold · Al-Ahmadgaid B. Asaad · Dean Attali · Mara Averick · Suzan Baert · James Balamuta · Vikram Baliga · David Bapst · Joëlle Barido-Sottani · Allison Barner · Cale Basaraba · John Baumgartner · Marcus Beck · Gabriel Becker · Jason Becker · Dom Bennett · Ken Benoit · Aaron Berdanier · Fred Boehm · Carl Boettiger · Bolton · Ben Bond-Lamberty · Anne-Sophie Bonnet-Lebrun · Alison Boyer · Abby Bratt · François Briatte · Eric Brown · Julien Brun · Jenny Bryan · Lorenzo Busetto · Brad Cannell · Kevin Cazelles · Scott Chamberlain · Cathy Chamberlin · Jennifer Chang · Jorge Cimentada · Chase Clark · Jon Clayden · Cornwell · Nic Crane · Enrico Crema · Ildiko Czeller · Kauê de Sousa · Christophe Dervieux · Amanda Dobbyn · Jasmine Dumas · Remko Duursma · Mark Edmondson · Paul Egeler · Evan Eskew · Salvador Fernandez · Alexander Fischer · Kim Fitter · Robert M Flight · Sydney Foks · Zachary Stephen Longiaru Foster · Auriel Fournier · Carl Ganz · Duncan Garmonsway · Sharla Gelfand · Monica Gerber · Duncan Gillespie · David Gohel · Laura Graham · Charles Gray · Matthias Grenié · Corinna Gries · Hugo Gruson · W Kyle Hamilton · Ivan Hanigan · Jeffrey Hanson · Rayna Harris · Ted Hart · Nujcharee Haswell · Verena Haunschmid · Stephanie Hazlitt · Andrew Heiss · Max Held · Anna Hepworth · Bea Hernandez · Jim Hester · Peter Hickey · Roel Hogervorst · Kelly Hondula · Allison Horst · Sean Hughes · James Hunter · Brandon Hurr · Ger Inberg · Christopher Jackson · Najko Jahn · Tamora D James · Mike Johnson · Jones · Max Joseph · Krunoslav Juraic · Soumya Kalra · Zhian N. Kamvar · Michael Kane · Andee Kaplan · Hazel Kavılı · Jonathan Keane · Os Keyes · Aaron . King · Michael Koontz · Bianca Kramer · Landau · Erin LeDell · Thomas Leeper · Sam Levin · Stephanie Locke · Marion Louveaux · Robin Lovelace · Julia Stewart Lowndes · Tim Lucas · Andrew MacDonald · Jesse Maegan · Tristan Mahr · Paula Andrea Martinez · Joao Martins · Ben Marwick · Miles McBain · Lucy D’Agostino McGowan · Amelia McNamara · Elaine McVey · Bryce Mecum · François Michonneau · Mario Miguel · Helen Miller · Beatriz Milz · Jessica Minnier · Priscilla Minotti · Nichole Monhait · Kelsey Montgomery · Paula Moraga · Ross Mounce · Lincoln Mullen · Matt Mulvahill · Maria Victoria Munafó · David Neuzerling · Dillon Niederhut · Rory Nolan · Kari Norman · Jakub Nowosad · Daniel Nüst · Joseph O’Brien · Paul Oldham · Samantha Oliver · Dan Olner · Jeroen Ooms · Luis Osorio · Philipp Ottolinger · Mark Padgham · Marina Papadopoulou · Edzer Pebesma · Thomas Lin Pedersen · Rafael Pilliard-Hellwig · Rodrigo Neto Pires · Lindsay Platt · Nicholas Potter · Etienne Racine · Nistara Randhawa · David Ranzolin · Quentin Read · Neal Richardson · tyler rinker · Emily Robinson · David Robinson · Francisco Rodriguez-Sanchez · Julia Romanowska · Xavier Rotllan-Puig · Bob Rudis · Edgar Ruiz · Kent Russel · Alicia Schep · Klaus Schliep · Clemens Schmid · Patrick Schratz · Marco Sciaini · Heidi Seibold · Julia Silge · Margaret Siple · Peter Slaughter · Mike Smith · Tuija Sonkkila · Joseph Stachelek · Christine Stawitz · Irene Steves · Michael Sumner · Chung-Kai Sun · Sarah Supp · Jason Taylor · Filipe Teixeira · Andy Teucher · Jennifer Thompson · Joe Thorley · Tiffany Timbers · Tan Tran · Tim Trice · Kyle Ueyama · Ted Underwood · Adithi R. Upadhya · Kevin Ushey · Josef Uyeda · Frans van Dunné · Mauricio Vargas · Remi Vergnon · Jake Wagner · Ben Ward · Elin Waring · Rachel Warnock · Leah Wasser · Lukas Weber · Marc Weber · Karissa Whiting · Stefan Widgren · Anna Willoughby · Saras Windecker · Luke Winslow · David Winter · Witold Wolski · Kara Woo · Bruna Wundervald · Lauren Yamane · Emily Zabor · Taras Zakharko · Hao Zhu · Chava Zibman · Naupaka Zimmerman · Jake Zwart · Manuel · Rich · Claudia · Jasmine · Lluís · gauravWe also grateful following individuals served guest editors.Ana Laura Diedrichs · Hao Zhu","code":""},{"path":"policies.html","id":"policies","chapter":"5 Software Peer Review policies","heading":"5 Software Peer Review policies","text":"\nchapter contains policies rOpenSci Software Peer Review.\n\nparticular, ’ll read policies regarding software peer review : review submission process including conflict interest policies, aims scope Software Peer Review system. chapter also features policies regarding package ownership maintenance.\n\nLast least, ’ll find code conduct rOpenSci Software Peer Review.\n","code":""},{"path":"policies.html","id":"policiesreviewprocess","chapter":"5 Software Peer Review policies","heading":"5.1 Review process","text":"package considered rOpenSci suite, package authors must initiate request ropensci/software-review repository.Packages reviewed quality, fit, documentation, clarity review process quite similar manuscript review (see packaging guide reviewing guide details). Unlike manuscript review, process ongoing conversation.major issues questions, addressable reasonable effort, resolved, editor assigned package make decision (accept, hold, reject). Rejections usually done early (review process begins, see aims scope section), rare cases package may also onboarded review & revision. ultimately editor’s decision whether reject package based reviews addressed.Communication authors, reviewers editors first foremost take place GitHub, although can choose contact editor email Slack issues. submitting package, please make sure GitHub notification settings make unlikely miss comment.author can choose submission put hold (editor applies holding label). holding status revisited every 3 months, one year issue closed.author hasn’t requested holding label, simply responding, close issue within one month last contact intent. intent include comment tagging author, also email using email address listed DESCRIPTION package one rare cases editor try contact author email.submission closed author wishes re-submit, ’ll start new submission. package still scope, author respond initial reviews editor starts looking new reviewers.","code":""},{"path":"policies.html","id":"publishing-in-other-venues","chapter":"5 Software Peer Review policies","heading":"5.1.1 Publishing in other Venues","text":"strongly suggest submitting package review publishing\nCRAN submitting software paper describing package journal.\nReview feedback may result major improvements updates package,\nincluding renaming breaking changes functions. consider\nprevious publication CRAN venues sufficient reason \nadopt reviewer editor recommendations.submit package review associated manuscript\nalso review another venue, may result conflicting\nrequests changes.","code":""},{"path":"policies.html","id":"coi","chapter":"5 Software Peer Review policies","heading":"5.1.2 Conflict of interest for reviewers/editors","text":"Following criteria meant guide constitutes conflict interest editor reviewer. potential editor reviewer conflict interest :authors major role potential reviewer/editor’s institution institutional component (e.g., department)Within past three years, potential reviewer/editor collaborator professional relationship person package major roleThe potential reviewer/editor serves member advisory board project reviewThe potential reviewer/editor receive direct indirect financial benefit package acceptedThe potential reviewer/editor significantly contributed competitor project.also lifetime COI family members, business partners, thesis student/advisor mentor.case none associate editors can serve editor, external guest editor recruited.","code":""},{"path":"policies.html","id":"aims-and-scope","chapter":"5 Software Peer Review policies","heading":"5.2 Aims and Scope","text":"rOpenSci aims support packages enable reproducible research managing data lifecycle scientists. Packages submitted rOpenSci fit one categories outlined either . Statistical software may also submitted peer review, separate set guidelines standards. categories general, statistical, software, remainder chapter applies kinds software. unsure whether package fits one general statistical categories, please open issue pre-submission inquiry (Examples).living document, categories may change time previously onboarded packages -scope today. instance, data visualization packages longer -scope. strive consistent, evaluate packages case--case basis may make exceptions.Note rOpenSci projects packages -scope go peer review. Projects developed staff conferences may experimental, exploratory, address core infrastructure priorities thus fall categories. Look peer-review badge - see - identify peer-reviewed packages rOpenSci repository.","code":""},{"path":"policies.html","id":"package-categories","chapter":"5 Software Peer Review policies","heading":"5.2.1 Package categories","text":"data retrieval: Packages accessing downloading data online sources scientific applications. definition scientific applications broad, including data storage services, journals, remote servers, many data sources may interest researchers. However, retrieval packages focused data sources / topics, rather services. example general client Amazon Web Services data storage -scope. (Examples: rotl,\ngutenbergr)data retrieval: Packages accessing downloading data online sources scientific applications. definition scientific applications broad, including data storage services, journals, remote servers, many data sources may interest researchers. However, retrieval packages focused data sources / topics, rather services. example general client Amazon Web Services data storage -scope. (Examples: rotl,\ngutenbergr)data extraction: Packages aid retrieving data unstructured sources text, images PDFs, well parsing scientific data types outputs scientific equipment. Statistical/ML libraries modeling prediction typically included category, code parsers. Trained models act utilities (e.g., optical character recognition), may qualify. (Examples: tabulizer extracting tables PDF documents, genbankr parsing files GenBank, treeio phylogentic reading phylogentic tree files, lightr parsing files spectroscopic instruments))data extraction: Packages aid retrieving data unstructured sources text, images PDFs, well parsing scientific data types outputs scientific equipment. Statistical/ML libraries modeling prediction typically included category, code parsers. Trained models act utilities (e.g., optical character recognition), may qualify. (Examples: tabulizer extracting tables PDF documents, genbankr parsing files GenBank, treeio phylogentic reading phylogentic tree files, lightr parsing files spectroscopic instruments))data munging: Packages processing data formats . area include broad data manipulations tools reshape2 tidyr, tools extracting data R code . Rather, focuses tools handling data specific scientific formats generated scientific workflows exported scientific instruments. (Examples: plateR reading data structured plate maps scientific instruments, phonfieldwork processing annotated audio files phonics research)data munging: Packages processing data formats . area include broad data manipulations tools reshape2 tidyr, tools extracting data R code . Rather, focuses tools handling data specific scientific formats generated scientific workflows exported scientific instruments. (Examples: plateR reading data structured plate maps scientific instruments, phonfieldwork processing annotated audio files phonics research)data deposition: Packages support deposition data research repositories, including data formatting metadata generation.\n(Example: EML)data deposition: Packages support deposition data research repositories, including data formatting metadata generation.\n(Example: EML)data validation testing: Tools enable automated validation checking data quality completeness part scientific workflows. (Example: assertr)data validation testing: Tools enable automated validation checking data quality completeness part scientific workflows. (Example: assertr)workflow automation: Tools automate link together workflows, build systems tools manage continuous integration. include general tools literate programming. (e.g., R markdown extensions previous topics). (Example: drake)workflow automation: Tools automate link together workflows, build systems tools manage continuous integration. include general tools literate programming. (e.g., R markdown extensions previous topics). (Example: drake)version control: Tools facilitate use version control scientific workflows. Note include tools interact online version control services (e.g., GitHub), unless fit another category. (Example: git2rdata)version control: Tools facilitate use version control scientific workflows. Note include tools interact online version control services (e.g., GitHub), unless fit another category. (Example: git2rdata)citation management bibliometrics: Tools facilitate managing references, writing manuscripts, creating CVs otherwise attributing scientific contributions, accessing, manipulating otherwise working bibliometric data. (Example: RefManageR)citation management bibliometrics: Tools facilitate managing references, writing manuscripts, creating CVs otherwise attributing scientific contributions, accessing, manipulating otherwise working bibliometric data. (Example: RefManageR)scientific software wrappers: Packages wrap non-R utility programs used scientific research. programs must specific research fields, general computing utilities. Wrappers must non-trivial, must significant added value simple system() call bindings, whether parsing inputs outputs, data handling, etc. Improved installation process, extension compatibility platforms, may constitute added value installation complex. include wrappers R packages C/C++ libraries can included R packages. strongly encourage wrapping open-source open-licensed utilities - exceptions evaluated case--case, considering whether open-source options exist. (Examples: babette, nlrx)scientific software wrappers: Packages wrap non-R utility programs used scientific research. programs must specific research fields, general computing utilities. Wrappers must non-trivial, must significant added value simple system() call bindings, whether parsing inputs outputs, data handling, etc. Improved installation process, extension compatibility platforms, may constitute added value installation complex. include wrappers R packages C/C++ libraries can included R packages. strongly encourage wrapping open-source open-licensed utilities - exceptions evaluated case--case, considering whether open-source options exist. (Examples: babette, nlrx)field laboratory reproducibility tools: Packages improve reproducibility real-world workflows standardization automation field lab protocols, sample tracking tagging, form data sheet generation, interfacing laboratory equipment information systems, executing experimental designs. (Example: baRcodeR)field laboratory reproducibility tools: Packages improve reproducibility real-world workflows standardization automation field lab protocols, sample tracking tagging, form data sheet generation, interfacing laboratory equipment information systems, executing experimental designs. (Example: baRcodeR)database software bindings: Bindings wrappers generic database APIs (Example: rrlite)database software bindings: Bindings wrappers generic database APIs (Example: rrlite)addition, specialty topics slightly broader scope.geospatial data: accept packages focused accessing geospatial data, manipulating geospatial data, converting geospatial data formats. (Examples: osmplotr, tidync).geospatial data: accept packages focused accessing geospatial data, manipulating geospatial data, converting geospatial data formats. (Examples: osmplotr, tidync).text data: include packages process manage text language data. limited text processing/munging/management (e.g., tokenization, stemming, conversion structured text formats, text metadata repository access, etc. ). Machine-learning packages implementing NLP analysis algorithms submitted statistical software peer review. scope topic fully defined, please open pre-submission inquiry considering submitting package falls topic. (Example: tokenizers)text data: include packages process manage text language data. limited text processing/munging/management (e.g., tokenization, stemming, conversion structured text formats, text metadata repository access, etc. ). Machine-learning packages implementing NLP analysis algorithms submitted statistical software peer review. scope topic fully defined, please open pre-submission inquiry considering submitting package falls topic. (Example: tokenizers)","code":""},{"path":"policies.html","id":"other-scope-considerations","chapter":"5 Software Peer Review policies","heading":"5.2.2 Other scope considerations","text":"Packages general sense solve problem broadly possible maintaining coherent user interface code base. instance, several data sources use identical API, prefer package provides access data sources, rather just one.Packages include interactive tools facilitate researcher workflows (e.g., shiny apps) must mechanism make interactive workflow reproducible, code generation scriptable API.packages scope rOpenSci, encourage submitting CRAN, BioConductor, well R package development initiatives (e.g., cloudyr), software journals JOSS, JSS, R journal, depending current scopes journals.Note packages developed internally rOpenSci, events collaborations -scope Software Peer Review process.","code":""},{"path":"policies.html","id":"overlap","chapter":"5 Software Peer Review policies","heading":"5.2.3 Package overlap","text":"rOpenSci encourages competition among packages, forking re-implementation improve options users overall. However, want packages rOpenSci suite top recommendations tasks perform, aim avoid duplication functionality existing R packages repo without significant improvements. R package replicates functionality existing R package may considered inclusion rOpenSci suite significantly improves alternatives repository (RO, CRAN, BioC) :open licensing development practicesBroader functionality (e.g., providing access data sets, providing greater suite functions), duplicating additional packagesBetter usability performanceActively maintained alternatives poorly longer actively maintainedThese factors considered whole determine package significant improvement. new package meet standard following package guidelines others , unless leads significant difference areas .recommend packages highlight differences improvements overlapping packages README /vignettes.encourage developers whose packages accepted due overlap still consider submittal repositories journals.","code":""},{"path":"policies.html","id":"ownership-after-softwarereview","chapter":"5 Software Peer Review policies","heading":"5.3 Package ownership and maintenance","text":"","code":""},{"path":"policies.html","id":"role-of-the-ropensci-team","chapter":"5 Software Peer Review policies","heading":"5.3.1 Role of the rOpenSci team","text":"Authors contributed packages essentially maintain ownership prior package joining rOpenSci suite. Package authors continue maintain develop software acceptance rOpenSci. Unless explicitly added collaborators, rOpenSci team interfere much day day operations. However, team may intervene critical bug fixes, address urgent issues package authors respond timely manner (see section maintainer responsiveness).","code":""},{"path":"policies.html","id":"maintainer-responsiveness","chapter":"5 Software Peer Review policies","heading":"5.3.2 Maintainer responsiveness","text":"package maintainers respond timely manner requests package fixes CRAN us, remind maintainer number times, 3 months (shorter time frame, depending critical fix ) make changes .bit vague, following areas consideration.Examples ’d want move quickly:\nPackage foo imported one packages CRAN, foo broken, thus break reverse dependencies.\nPackage bar may reverse dependencies CRAN, widely used, thus quickly fixing problems greater importance.\nPackage foo imported one packages CRAN, foo broken, thus break reverse dependencies.Package bar may reverse dependencies CRAN, widely used, thus quickly fixing problems greater importance.Examples can wait longer:\nPackage hello CRAN, CRAN, reverse dependencies.\nPackage world needs fixes. maintainer responded simply busy new job, reason, attend soon.\nPackage hello CRAN, CRAN, reverse dependencies.Package world needs fixes. maintainer responded simply busy new job, reason, attend soon.urge package maintainers make sure receiving GitHub notifications, well making sure emails rOpenSci staff CRAN maintainers going spam box. Authors onboarded packages invited rOpenSci Slack chat rOpenSci team greater rOpenSci community. Anyone can also discuss rOpenSci community rOpenSci discussion forum.authors abandon maintenance actively used package suite, consider petitioning CRAN transfer package maintainer status rOpenSci.","code":""},{"path":"policies.html","id":"quality-commitment","chapter":"5 Software Peer Review policies","heading":"5.3.3 Quality commitment","text":"rOpenSci strives develop promote high quality research software. ensure software meets criteria, review submissions part Software Peer Review process, even acceptance continue step improvements bug fixes.Despite best efforts support contributed software, errors responsibility individual maintainers. Buggy, unmaintained software may removed suite time.","code":""},{"path":"policies.html","id":"package-removal","chapter":"5 Software Peer Review policies","heading":"5.3.4 Package removal","text":"unlikely scenario contributor package requests removal package suite, retain right maintain version package suite archival purposes.","code":""},{"path":"policies.html","id":"ethics-data-privacy-and-human-subjects-research","chapter":"5 Software Peer Review policies","heading":"5.4 Ethics, Data Privacy and Human Subjects Research","text":"rOpenSci packages tools used variety purposes, focus \ntools research. expect tools enable ethical use research\npractitioners, obligated adhere ethical codes Declaration \nHelsinki\nBelmont\nReport.\nResearchers bear responsibility use software, software\ndevelopers must consider ethical use products, developers\nadhere ethical codes computer professionals \nexpressed IEEE \nACM. rOpenSci contributors often play role\nresearcher developer.ask software developers place researchers’ role \nconsider requirements ethical workflow using authors’ software.\nGiven variation degree flux ethical approaches Internet-based\nanalyses, judgement calls rather recipes required. Ethical\nGuidelines Association Internet Researchers\nprovides robust framework encourage authors, editors, reviewers use\nevaluating work. general, adherence legal regulatory\nminimum requirements may sufficient, though (e.g.,\nGDPR), may relevant. Package authors direct\nusers relevant resources ethical use software.packages, due nature data handle, may determined editors require enhanced scrutiny. , editors may require additional (reduced) functionality, robust\ndocumentation, defaults, warnings direct users relevant ethical\npractices. following topics may merit enhanced scrutiny:Vulnerable populations: Authors packages workflows deal \ninformation related vulnerable populations bear responsibility protect\nlikely harms.Vulnerable populations: Authors packages workflows deal \ninformation related vulnerable populations bear responsibility protect\nlikely harms.Personally identifiable sensitive data: release personally\nidentifiable sensitive data potentially harmful. includes “reasonably\nre-identifiable” data - motivated individual trace back \nowner creator even data anonymized. includes cases identifiers\n(e.g., name, date birth) available part data, also unique\npseudonyms/screen names linked full-text posts, one\ncan link back individuals cross-reference data sets.Personally identifiable sensitive data: release personally\nidentifiable sensitive data potentially harmful. includes “reasonably\nre-identifiable” data - motivated individual trace back \nowner creator even data anonymized. includes cases identifiers\n(e.g., name, date birth) available part data, also unique\npseudonyms/screen names linked full-text posts, one\ncan link back individuals cross-reference data sets.best response ethical concerns context-specific, \ngeneral guidelines followed packages challenges arise:Packages adhere data source’s terms use, expressed \nwebsite Terms Conditions, “robots.txt” files, privacy policies, \nrelevant restrictions, link prominently package\ndocumentation. Packages provide document functionality adhere\nrestrictions (e.g., scrape allowed endpoints, use\nappropriate rate limiting code, examples, vignettes). Note Terms\nConditions, Privacy Policies, etc., may provide sufficient bounds \nethical usage, can provide outer bound.Packages adhere data source’s terms use, expressed \nwebsite Terms Conditions, “robots.txt” files, privacy policies, \nrelevant restrictions, link prominently package\ndocumentation. Packages provide document functionality adhere\nrestrictions (e.g., scrape allowed endpoints, use\nappropriate rate limiting code, examples, vignettes). Note Terms\nConditions, Privacy Policies, etc., may provide sufficient bounds \nethical usage, can provide outer bound.key tool addressing risks posed studying vulnerable populations \nusing personally identifiable data informed consent. Package authors\nsupport users’ acquisition informed consent relevant. may\ninclude providing links data source’s preferred method acquiring consent,\ncontact information data providers (e.g. forum moderators), documentation\ninformed consent protocols, getting pre-approval general uses \npackage.\nNote consent implicitly granted just data accessible.\nAccessible data necessarily public, different persons contexts\ndifferent normative expectations privacy (see work Social Data\nLab).key tool addressing risks posed studying vulnerable populations \nusing personally identifiable data informed consent. Package authors\nsupport users’ acquisition informed consent relevant. may\ninclude providing links data source’s preferred method acquiring consent,\ncontact information data providers (e.g. forum moderators), documentation\ninformed consent protocols, getting pre-approval general uses \npackage.Note consent implicitly granted just data accessible.\nAccessible data necessarily public, different persons contexts\ndifferent normative expectations privacy (see work Social Data\nLab).Packages accessing personally identifiable information take special\ncare follow security best practices\n(e.g., exclusive use secure internet protocols, strong mechanisms \nstoring credentials, etc.).Packages accessing personally identifiable information take special\ncare follow security best practices\n(e.g., exclusive use secure internet protocols, strong mechanisms \nstoring credentials, etc.).Packages access handle personally identifiable sensitive data\nenable, document, demonstrate workflows de-identification,\nsecure storage, best practices minimize risk harm.Packages access handle personally identifiable sensitive data\nenable, document, demonstrate workflows de-identification,\nsecure storage, best practices minimize risk harm.standards data privacy research continue evolve, welcome input\nauthors considerations specific software supplemental\ndocumentation approval university ethics review boards. \nmay attached issue threads package submissions pre-submission inquiries,\nconveyed directly editors needed. General\nsuggestions may filed issues book’s repository.","code":""},{"path":"policies.html","id":"resources","chapter":"5 Software Peer Review policies","heading":"5.4.1 Resources","text":"following resources may helpful researchers, package authors, editors\nreviewers addressing ethical questions related privacy research software.Declaration \nHelsinki\nBelmont\nReport\nprovide fundamental principles ethical practice researchers.Several organizations provide guidance translate principles\ncontext internet research. include Ethical\nGuidelines Association Internet\nResearchers, NESH Guide Internet\nResearch\nEthics,\nBPS’ Ethics Guidelines Internet-Mediated\nResearch.\nAnabo et al (2019) provide \nhelpful overview .Social Media Lab provides high-level\noverview data normative\nexpectations privacy use social forums.Bechmann ., Kim J.Y. (2019) Big Data: Focus Social Media Research\nDilemmas. : Iphofen R. (eds) Handbook Research Ethics Scientific\nIntegrity. https://doi.org/10.1007/978-3-319-76040-7_18-1Chu, K.-H., Colditz, J., Sidani, J., Zimmer, M., & Primack, B. (2021). Re-evaluating standards \nhuman subjects protection sensitive health data social media networks.\nSocial Networks, 67, 41–46. https://dx.doi.org/10.1016/j.socnet.2019.10.010Lomborg, S., & Bechmann, . (2014). Using APIs Data Collection Social\nMedia. Information Society, 30(4), 256–265.\nhttps://dx.doi.org/10.1080/01972243.2014.915276Flick, C. (2016). Informed consent Facebook emotional manipulation\nstudy. Research Ethics, 12(1), 14–28.\nhttps://doi.org/10.1177/1747016115599568Sugiura, L., Wiles, R., & Pope, C. (2017). Ethical challenges online\nresearch: Public/private perceptions. Research Ethics, 13(3–4),\n184–199. https://doi.org/10.1177/1747016116650720Taylor, J., & Pagliari, C. (2018). Mining social media data: \nresearch sponsors researchers addressing ethical challenges?\nResearch Ethics, 14(2), 1–39. https://doi.org/10.1177/1747016117738559Zimmer, M. (2010). “data already public”: ethics \nresearch Facebook. Ethics Information Technology, 12(4), 313–325.\nhttps://dx.doi.org/10.1007/s10676-010-9227-5","code":""},{"path":"policies.html","id":"code-of-conduct","chapter":"5 Software Peer Review policies","heading":"5.5 Code of Conduct","text":"rOpenSci’s community best asset. Whether ’re regular contributor newcomer, care making safe place ’ve got back. Code Conduct applies people participating rOpenSci community, including rOpenSci staff leadership modes interaction online person. Code Conduct maintained rOpenSci website.","code":""},{"path":"authors-guide.html","id":"authors-guide","chapter":"6 Guide for Authors","heading":"6 Guide for Authors","text":"\nconcise guide presents software peer review process package author.\n","code":""},{"path":"authors-guide.html","id":"planning-a-submission-or-a-pre-submission-enquiry","chapter":"6 Guide for Authors","heading":"6.1 Planning a Submission (or a Pre-Submission Enquiry)","text":"expect maintain package least 2 years, able identify new maintainer?Consult policies see package meets criteria fitting suite overlap packages.\nunsure whether package meets criteria, feel free open issue pre-submission inquiry ask package appropriate.\nunsure whether package meets criteria, feel free open issue pre-submission inquiry ask package appropriate.Please consider best time package’s development submit. package sufficiently mature reviewers able review essential aspects, keep mind review may result major changes.\nstrongly suggest submitting package review publishing CRAN submitting software paper describing package journal. Review feedback may result major improvements updates package, including renaming breaking changes functions.\nsubmit package review associated manuscript also review another venue, may result conflicting requests changes.\nstrongly suggest submitting package review publishing CRAN submitting software paper describing package journal. Review feedback may result major improvements updates package, including renaming breaking changes functions.submit package review associated manuscript also review another venue, may result conflicting requests changes.Please also consider time effort needed respond reviews: think availability collaborators next weeks months following submission. Note reviewers volunteers, ask respect time effort responding timely respectful manner.use repostatus.org badges (recommend), submit ’re ready get Active instead WIP badge. Similarly, use lifecycle badges, submission happen package least Maturing.submission pre-submission inquiry README package provide enough information package (goals, usage, similar packages) editors assess scope without install package. Even better, set pkgdown website allowing detailed assessment functionality online.\nsubmission stage, major functions stable enough fully documented tested; README make strong case package.\nREADME file strive explain package’s functionality aims, assuming readers little domain knowledge. technical tems, including references software, clarified.\nsubmission stage, major functions stable enough fully documented tested; README make strong case package.README file strive explain package’s functionality aims, assuming readers little domain knowledge. technical tems, including references software, clarified.package continue evolve review, chapter Package evolution provides guidance topic.","code":""},{"path":"authors-guide.html","id":"preparing-for-submission","chapter":"6 Guide for Authors","heading":"6.2 Preparing for Submission","text":"Read follow packaging style guide, reviewer’s guide ensure package meets style quality criteria.Feel free ask questions process, specific package, Discussion Forum.submissions automatically checked pkgcheck system ensure packages follow guidelines. authors expected run main pkgcheck function locally confirm package ready submitted. Alternatively, even easier way ensure package ready submission use pkgcheck GitHub Action run pkgcheck GitHub Action, described blog post.aspects pkgcheck package unable pass, please explain reasons submission template.feel package scope \nJournal Open-Source Software (JOSS), submit JOSS consideration rOpenSci review process : package deemed scope JOSS editors, accompanying short paper reviewed, (software extended reviewed rOpenSci time). rOpenSci packages meet criteria JOSS.","code":""},{"path":"authors-guide.html","id":"the-submission-process","chapter":"6 Guide for Authors","heading":"6.3 The Submission Process","text":"Software submitted review opening new issue software review repository filling template.template begins section includes several HTML-styled variables (<!---variable--->). used ropensci-review-bot, must left place, values filled indicated start end points, like :Communication authors, reviewers editors first foremost take place GitHub review thread can serve full record review. may choose contact editor email Slack private consultation needed (e.g., asking respond reviewer question). contact reviewers -thread without asking GitHub thread whether agree .submitting package please make sure GitHub notification settings make unlikely miss comment.Packages automatically checked submission pkgcheck system, confirm whether package ready reviewed.","code":"<!---variable--->insert value here<!---end-variable>"},{"path":"authors-guide.html","id":"the-review-process","chapter":"6 Guide for Authors","heading":"6.4 The Review Process","text":"editor review submission within 5 business days respond next steps. editor may assign package reviewers, request package updated meet minimal criteria review, reject package due lack fit overlap.package meets minimal criteria, editor assign 1-3 reviewers. asked provide reviews comments issue within 3 weeks.ask respond reviewers’ comments within 2 weeks last-submitted review, may make updates package respond time. response include link updated NEWS.md package. author response example. encourage ongoing conversations authors reviewers. See reviewing guide details.time package changes likely alter results automated pkgcheck checks, authors can request re-check command, @ropensci-review-bot check package.Please notify us immediately longer able maintain package respond reviews. expected either retract submission, find alternative package maintainers. can also discuss maintenance issues rOpenSci slack workspace.package approved, provide instructions transfer repository rOpenSci repository.code conduct mandatory everyone involved review process.","code":""},{"path":"reviewerguide.html","id":"reviewerguide","chapter":"7 Guide for Reviewers","heading":"7 Guide for Reviewers","text":"\nThanks accepting review package rOpenSci! chapter consists guidelines prepare, submit follow review.\n\nmight contact editor charge submission question might process review.\n\nPlease strive complete review within 3 weeks accepting review request. aim remind reviewers upcoming past due dates. Editors may assign additional alternate reviewers review excessively late.\n\nuse standards/checklists etc. reviewing software elsewhere, tell recipients (e.g. journal editors, students, internal code review) came rOpenSci, tell us public forum, privately email.\n","code":""},{"path":"reviewerguide.html","id":"preparing-your-review","chapter":"7 Guide for Reviewers","heading":"7.1 Preparing your review","text":"submissions trigger detailed report package structure functionality, generated pkgcheck package. package changed substantially since last checks, may request re-check command @ropensci-review-bot check package. Note installing package review , use dependencies = TRUE argument remotes::install() make sure dependencies available.","code":""},{"path":"reviewerguide.html","id":"general-guidelines","chapter":"7 Guide for Reviewers","heading":"7.1.1 General guidelines","text":"review package, please begin copying review template (review template Spanish) using high-level checklist. addition checking minimum criteria, ask provide general comments addressing following:code comply general principles Mozilla reviewing guide?package comply rOpenSci packaging guide?improvements made code style?code duplication package reduced?user interface improvements made?performance improvements made?documentation (installation instructions/vignettes/examples/demos) clear sufficient? use principle multiple points entry .e. takes account fact piece documentation may first encounter user package /tool/data wraps?functions arguments named work together form common, logical programming API easy read, autocomplete?relevant data/problem, work package. may find rough edges use-cases author didn’t think .Please respectful kind authors reviews. code conduct mandatory everyone involved review process. expect submit review within 3 weeks, depending deadline set editor. Please contact editor directly submission thread inform possible delays.encourage use automated tools facilitate reviewing. include:Checking initial package report generated @ropensci-review-bot.Checking package’s logs continuous integration services (GitHub Actions, Codecov, etc.)Running devtools::check() devtools::test() package find errors may missed author’s system.Seeing whether tests’ skipping justified (e.g. skip_on_cran() tests real API requests vs. skipping tests one operating system).Reviewers may also re-generate package check results @ropensci-review-bot time issuing single comment review issue: @ropensci-review-bot check package.","code":""},{"path":"reviewerguide.html","id":"off-thread-interactions","chapter":"7 Guide for Reviewers","heading":"7.1.2 Off-thread interactions","text":"interact package authors talked review outside review thread (chats, DMs, -person, issues project repository), please make sure review captures /links elements conversations relevant process.","code":""},{"path":"reviewerguide.html","id":"experience-from-past-reviewers","chapter":"7 Guide for Reviewers","heading":"7.1.3 Experience from past reviewers","text":"First-time reviewers may find helpful read () previous reviews. general can find submission threads onboarded packages . chosen examples reviews (note reviews need long examples):rtika review 1 review 2rtika review 1 review 2NLMR review 1 review 2NLMR review 1 review 2bowerbird pre-review comment, review 1, review 2.bowerbird pre-review comment, review 1, review 2.rusda review (review template)rusda review (review template)can read blog posts written reviewers experiences via link. particular, blog post Mara Averick read “naive user” role reviewer can take provide useful feedback even without experts package’s topic implementation, asking “think thing ? ? things scare ?”. another blog post Verena Haunschmid explains alternated using package checking code.former reviewer package author Adam Sparks wrote “[write] good critique package structure best coding practices. know something better, tell . ’s easy miss documentation opportunities developer, reviewer, different view. ’re user can give feedback. ’s clear package? can made clear? ’re using first time, easy? know another R package maybe using? one ’m using perhaps shouldn’t ? can contribute package, offer.”","code":""},{"path":"reviewerguide.html","id":"helper-package-for-reviewers","chapter":"7 Guide for Reviewers","heading":"7.1.4 Helper package for reviewers","text":"working RStudio, can streamline review workflow using pkgreviewr package created associated editor Anna Krystalli. Say accepted review refnet package, ’d writeandthe GitHub repo refnet package cloned.review project created, containing notebook fill, review template.","code":"remotes::install_github(\"ropensci-org/pkgreviewr\")\nlibrary(pkgreviewr)\npkgreview_create(pkg_repo = \"embruna/refnet\", \n                 review_parent = \"~/Documents/workflows/rOpenSci/reviews/\")"},{"path":"reviewerguide.html","id":"feedback-on-the-process","chapter":"7 Guide for Reviewers","heading":"7.1.5 Feedback on the process","text":"encourage ask questions provide feedback review process forum.","code":""},{"path":"reviewerguide.html","id":"submitreview","chapter":"7 Guide for Reviewers","heading":"7.2 Submitting the Review","text":"review complete, paste comment package software-review issue.Additional comments welcome issue. hope package reviews work ongoing conversation authors opposed single round reviews typical academic manuscripts.may also submit issues pull requests directly package repo choose, , please comment link software-review repo comment thread centralized record text review.Please include estimate many hours spent review afterwards.","code":""},{"path":"reviewerguide.html","id":"followupreviewer","chapter":"7 Guide for Reviewers","heading":"7.3 Review follow-up","text":"Authors respond within 2 weeks changes package response review. stage, ask respond whether changes sufficiently address issues raised review. encourage ongoing discussion package authors reviewers, may ask editors clarify issues review thread well.’ll use approval template.","code":""},{"path":"editorguide.html","id":"editorguide","chapter":"8 Guide for Editors","heading":"8 Guide for Editors","text":"\nSoftware Peer Review rOpenSci managed team editors. piloting system rotating Editor--Chief (EiC).\n\nchapter presents responsabilities Editor--Chief, editor charge submission, respond --scope submission manage dev guide release.\n\n’re guest editor, thanks helping! Please contact editor invited handle submission question might .\n","code":""},{"path":"editorguide.html","id":"editors-responsibilities","chapter":"8 Guide for Editors","heading":"8.1 Editors’ responsibilities","text":"addition handling packages (4 year), editors weigh group editorial decisions, whether package -scope, determining updates policies. generally Slack, expect editors able check regularly.addition handling packages (4 year), editors weigh group editorial decisions, whether package -scope, determining updates policies. generally Slack, expect editors able check regularly.also rotate Editor--Chief responsibilities (first-pass scope decisions assigning editors) amongst board quarterly.also rotate Editor--Chief responsibilities (first-pass scope decisions assigning editors) amongst board quarterly.keep track submissions, notice issue package handled another editor, feel free raise issue directly editor, post concern editors-channel slack. Examples:\nknow overlapping package, hasn’t mentioned process yet.\nsee question expert answer hasn’t given days (e.g. know blog post tackling add images package docs).\nConcerns related e.g. speed process tackled editor--chief ’s ’d turn questions.\nkeep track submissions, notice issue package handled another editor, feel free raise issue directly editor, post concern editors-channel slack. Examples:know overlapping package, hasn’t mentioned process yet.see question expert answer hasn’t given days (e.g. know blog post tackling add images package docs).Concerns related e.g. speed process tackled editor--chief ’s ’d turn questions.","code":""},{"path":"editorguide.html","id":"editorchecklist","chapter":"8 Guide for Editors","heading":"8.2 Handling Editor’s Checklist","text":"","code":""},{"path":"editorguide.html","id":"upon-submission","chapter":"8 Guide for Editors","heading":"8.2.1 Upon submission:","text":"’re EiC first editor respond, assign editor comment @ropensci-review-bot assign @username editor. also add tag 1/editor-checks issue.Submission automatically generate package check output ropensci-review-bot examined outstanding issues (exceptions need justified author particular context package.). want re-run checks package change post comment @ropensci-review-bot check package.automatic checks posted, use editor template guide initial checks record response submission. can also streamline editor checks using pkgreviewr package created associate editor Anna Krystalli. Please strive finish checks start looking reviewers within 5 working days.Check template properly filled .Check policies fit overlap.\nInitiate discussion via Slack #software-review channel needed edge cases haven’t caught previous checks EiC.\nreject, see section respond.Check mandatory parts template complete. , direct authors toward appropriate instructions.packages needing continuous integration multiple platforms (cf criteria section CI chapter) make sure package gets tested multiple platforms (package built several operating systems via GitHub Actions instance).Wherever possible asking changes, direct authors automatic tools usethis styler, online resources (sections guide, sections R packages book) make feedback easier use. Example editor’s checks.Ideally, remarks make tackled reviewers start reviewing.initial checks show major gaps, request changes assigning reviewers. author mentions changes might take time, apply holding label via typing @ropensci-review-bot put hold. ’ll get reminder every 90 days (issue) check package author(s).package raises new issue rOpenSci policy, start conversation Slack open discussion rOpenSci forum discuss editors (example policy discussion).","code":""},{"path":"editorguide.html","id":"look-for-and-assign-two-reviewers","chapter":"8 Guide for Editors","heading":"8.2.2 Look for and assign two reviewers:","text":"","code":""},{"path":"editorguide.html","id":"tasks","chapter":"8 Guide for Editors","heading":"8.2.2.1 Tasks","text":"Comment @ropensci-review-bot seeking reviewers.Use email template needed inviting reviewers\ninviting reviewers, include something like “don’t hear week, ’ll assume unable review,” give clear deadline ’ll move looking someone else.\ninviting reviewers, include something like “don’t hear week, ’ll assume unable review,” give clear deadline ’ll move looking someone else.Assign reviewers @ropensci-review-bot assign @username reviewer. add can also used instead assign, reviewers (plural) instead reviewer (single). following thus also valid: @ropensci-review-bot add @username reviewers. One command issued reviewer. needed later, remove reviewers @ropensci-review-bot remove @username reviewers.want change due date review use @ropensci-review-bot set due date @username YYYY-MM-DD.","code":""},{"path":"editorguide.html","id":"how-to-look-for-reviewers","chapter":"8 Guide for Editors","heading":"8.2.2.2 How to look for reviewers","text":"","code":""},{"path":"editorguide.html","id":"where-to-look-for-reviewers","chapter":"8 Guide for Editors","heading":"8.2.2.2.1 Where to look for reviewers?","text":"(guest) editor, usethe potential suggestions made submitter(s), (although submitters may narrow view types expertise needed. suggest using one suggested reviewers);Airtable database reviewers volunteers (see next subsection);authors rOpenSci packages.sources information enough,ping editors Slack ideas,look users package data source/upstream service package connects (via opening issues repository, starring , citing papers, talking Twitter).can also search authors related packages r-pkg.org.R-Ladies directory specifying skills interests people listed.might tweet reviewer search.","code":""},{"path":"editorguide.html","id":"tips-for-reviewer-search-in-airtable","chapter":"8 Guide for Editors","heading":"8.2.2.2.2 Tips for reviewer search in Airtable","text":"tools searching reviewers Airtable arefilters (please remove ’re done), see example .creating duplicated view, depending Airtable skills.look last_time_contacted last_answer columns contacting someone!\nsomeone recently refused busy, might best abstain, whereas someone refused COI contacted without waiting long.","code":""},{"path":"editorguide.html","id":"airtable-info","chapter":"8 Guide for Editors","heading":"8.2.2.2.3 Storing information from the reviewer search in Airtable","text":"people listed Airtable, contact review please update last_time_contacted column, enter category corresponding answer last_answer.add people Airtable accept review (otherwise, people volunteer filling Airtable form).\nenter information GitHub username, name email address .\nPoint reviewers Airtable form.","code":""},{"path":"editorguide.html","id":"criteria-for-choosing-a-reviewer","chapter":"8 Guide for Editors","heading":"8.2.2.2.4 Criteria for choosing a reviewer","text":"criteria keep mind choosing reviewer. might need piece information together searching CRAN potential reviewer’s GitHub page general online presence (personal website, Twitter).reviewed package us within last 6 months.package development experience.domain experience field package data sourceNo conflicts interest.Try balance sense potential reviewer’s experience complexity package.Diversity - two reviewers shouldn’t cis white males.evidence interested openness R community activities, although blind emailing fine.submission reviewed two package reviewers. Although fine one less package development experience domain knowledge, review split two. reviewers need review package comprehensively, though particular perspective. general, least one reviewer prior reviewing experience, course inviting one new reviewer expands pool reviewers.","code":""},{"path":"editorguide.html","id":"during-review","chapter":"8 Guide for Editors","heading":"8.2.3 During review:","text":"Check reviewers authors occasionally. Offer clarification help needed.general aim 3 weeks review, 2 weeks \nsubsequent changes, 1 week reviewer approval changes.Upon review submitted,\nWrite comment thanking reviewer words;\nRecord review via typing new comment @ropensci-review-bot submit review <review-url> time <time hours>. E.g. review https://github.com/ropensci/software-review/issues/329#issuecomment-809783937 comment @ropensci-review-bot submit review https://github.com/ropensci/software-review/issues/329#issuecomment-809783937 time 4.\nWrite comment thanking reviewer words;Record review via typing new comment @ropensci-review-bot submit review <review-url> time <time hours>. E.g. review https://github.com/ropensci/software-review/issues/329#issuecomment-809783937 comment @ropensci-review-bot submit review https://github.com/ropensci/software-review/issues/329#issuecomment-809783937 time 4.author stops responding, refer policies /ping editors Slack channel discussion. Importantly, reviewer assigned closed issue, contact closing issue explain decision, thank work, make note database assign submission high chances smooth software review next time (e.g. package author already submitted packages us).Upon changes made, change review status tag 5/awaiting-reviewer-response, request reviewers indicate approval reviewer approval template.","code":""},{"path":"editorguide.html","id":"after-review","chapter":"8 Guide for Editors","heading":"8.2.4 After review:","text":"@ropensci-review-bot approve <package-name>original repository owner opposes transfer, add line address repos list ensure package gets included rOpenSci package registry.Nominate package featured rOpenSci blog post tech note think might high interest. Please note software review issue one two things author highlight, tag @ropensci/blog-editors follow-.authors maintain gitbook least partly \npackage, contact rOpenSci staff member might contact authors\ntransfer ropensci-books GitHub organisation.","code":""},{"path":"editorguide.html","id":"package-promotion","chapter":"8 Guide for Editors","heading":"8.2.5 Package promotion:","text":"Direct author chapters guide package releases, marketing GitHub grooming.","code":""},{"path":"editorguide.html","id":"eicchecklist","chapter":"8 Guide for Editors","heading":"8.3 EiC Responsibilities","text":"EiC serves 3 months time agreed members editorial board.\nEiC entitled taking scope overlap decisions independently possible (can still request help/advice).\ndetails, EiC plays following rolesWatches issues posted software-review repo (either subscribe repo notifications GitHub, watch #software-peer-review-feed channel Slack).Watches issues posted software-review repo (either subscribe repo notifications GitHub, watch #software-peer-review-feed channel Slack).Tags issue 0/editorial-team-prepTags issue 0/editorial-team-prepAssigns package submissions editors, including self, handle. Mostly just rotates among editors, unless EiC thinks editor particularly suited package, editor declines handling submission due busy conflicting interests.\n@ropensci-review-bot assign @username editorAssigns package submissions editors, including self, handle. Mostly just rotates among editors, unless EiC thinks editor particularly suited package, editor declines handling submission due busy conflicting interests.Monitors pace review process reminds editors move packages along needed.Monitors pace review process reminds editors move packages along needed.assuming EiC rotation, reviews status current open reviews reminds editors respond update status needed.assuming EiC rotation, reviews status current open reviews reminds editors respond update status needed.Responds issues posted software-review-meta repoResponds issues posted software-review-meta repoMakes decisions scope/overlap pre-submission inquiries, referrals JOSS publication partners, submissions see ambiguous case (last case may also done handling editors (see )). initiate discussion, posted rOpenSci Slack editors-channel along small summary (pre-)submitted/referred submission , doubts EiC .e. digesting information bit. one day two EiC feels haven’t received enough answers, can ping editors.\neditor feel free step . See section respond --scope (pre-) submissions.\nexplaining --scope decision, write issue comment @ropensci-review-bot --scope.\nMakes decisions scope/overlap pre-submission inquiries, referrals JOSS publication partners, submissions see ambiguous case (last case may also done handling editors (see )). initiate discussion, posted rOpenSci Slack editors-channel along small summary (pre-)submitted/referred submission , doubts EiC .e. digesting information bit. one day two EiC feels haven’t received enough answers, can ping editors.editor feel free step . See section respond --scope (pre-) submissions.explaining --scope decision, write issue comment @ropensci-review-bot --scope.Requests new EiC rotation (set calendar reminder ahead expected end date ask volunteers editors’ Slack channel)Requests new EiC rotation (set calendar reminder ahead expected end date ask volunteers editors’ Slack channel)","code":"@ropensci-review-bot assign @username as editor"},{"path":"editorguide.html","id":"asking-for-more-details","chapter":"8 Guide for Editors","heading":"8.3.1 Asking for more details","text":"cases online documentation sparse. Minimal README, pkgdown website make assessment harder.\ncase please ask details: even package deemed --scope, package docs gotten better fine asking efforts.Example text","code":"Hello <username> and many thanks for your submission.\n\nWe are discussing whether the package is in scope and need a bit more information.\n\nWould you mind adding more details and context to the README?\nAfter reading it someone with little domain knowledge should have been informed about the aim, goals and functionality of the package.\n\n<optional>\nIf a package has overlapping functionality with other packages, we require it to demonstrate in the documentation [how it is best in class](https://devguide.ropensci.org/policies.html#overlap). Could you add a more detailed comparison to the packages you mention in the README so we can evaluate?\n<\/optional>"},{"path":"editorguide.html","id":"guesteditor","chapter":"8 Guide for Editors","heading":"8.3.2 Inviting a guest editor","text":"discussion editors EiC might invite guest editor handle submission (e.g. submission volume large, editors conflict interest, specific expertise needed, trial prior inviting person join editorial board).inviting guest editor,Ask conflicts interest using phrasing reviewers,Give link guide editors.person said yes (yay!),Make sure enabled 2FA GitHub account,Invite ropensci/editors team ropensci organization,’ve accepted repo invitation, assign issue ,Ensure ’re (already) invited rOpenSci Slack workspace,Add name Airtable guest-editor table (names might appear book software-review README).review process finished (package approved, issue closed),Thank guest editor ,Remove ropensci/editors team (ropensci organization).","code":""},{"path":"editorguide.html","id":"outofscoperesponse","chapter":"8 Guide for Editors","heading":"8.4 Responding to out-of-scope submissions","text":"Thank authors submission, explain reasons decision, direct publication venues relevant, rOpenSci discussion forum. Use wording Aims scope particular regarding evolution scope time, overlap differences unconf/staff/software-review development.Examples --scope submissions responses.","code":""},{"path":"editorguide.html","id":"reviewersupport","chapter":"8 Guide for Editors","heading":"8.5 Answering reviewers’ questions","text":"Reviewers might ask feedback e.g. tone review.\nBeside pointing general guidance guide, asking editors / opening issue guidance lacking,\nreview examples might useful.tough--constructive example: part review suggesting re-write vignette: ropensci/software-review#191 (comment).slopes package, ended fundamentally redesigned response reviews. reviews/reviewers times entirely constructive, seems played major role motivating authors embark major overhaul. Comments , “package …” “…” invariably followed constructive suggestions done (, example, several one first reviews).tic reviews politely expressed reservations: https://github.com/ropensci/software-review/issues/305#issuecomment-504762517 https://github.com/ropensci/software-review/issues/305#issuecomment-508271766bowerbird useful “pre-review” resulted package split actual reviews.","code":""},{"path":"editorguide.html","id":"bookrelease","chapter":"8 Guide for Editors","heading":"8.6 Managing a dev guide release","text":"charge managing release book reading, use book release guidance issue template posted dev guide issue tracker, hesitate ask questions editors.","code":""},{"path":"editorguide.html","id":"devguidegov","chapter":"8 Guide for Editors","heading":"8.6.1 Dev guide governance","text":"small amendments dev guide, PR review needed. larger amendments, request review least editors (none participated discussion related amendment, request review GitHub, absence reaction merge week).Two weeks dev guide release, PR dev master release blog post ready review, editors pinged GitHub (“review request” PR dev master) Slack, release doesn’t need explicitly approve release.","code":""},{"path":"editorguide.html","id":"releaseblogpost","chapter":"8 Guide for Editors","heading":"8.6.2 Blog post about a release","text":"blog post release reviewed editors, one @ropensci/blog-editors.","code":""},{"path":"editorguide.html","id":"content","chapter":"8 Guide for Editors","heading":"8.6.2.1 Content","text":"Refer general rOpenSci blogging guidance, specific guidance .First example post; second example.blog post mention important items changelog organized (sub)sections: e.g. section big change , another one big change B, one smaller changes lumped together. Mention important changes first.change made external contributor, thank explicitly using information changelog. E.g. [Matt Fidler](https://github.com/mattfidler/) amended section Console messages [ropensci/dev_guide#178](https://github.com/ropensci/dev_guide/pull/178)..end post, mention upcoming changes linking open issues issue tracker, invite readers contribute dev guide opening issues participating open discussions. Conclusion template:","code":"In this post we summarized the changes incorporated into our book [\"rOpenSci Packages: Development, Maintenance, and Peer Review\"](https://devguide.ropensci.org/) over the last X months. \nWe are grateful for all contributions that made this release possible. \nWe are already working on updates for our next version, such as ISSUE1, ISSUE2. \nCheck out the [the issue tracker](https://github.com/ropensci/dev_guide/issues/) if you'd like to contribute."},{"path":"editorguide.html","id":"authorship-1","chapter":"8 Guide for Editors","heading":"8.6.2.2 Authorship","text":"editor writing post first author, editors listed alphabetical order.","code":""},{"path":"editorialmanagement.html","id":"editorialmanagement","chapter":"9 Editorial management","heading":"9 Editorial management","text":"\nGuidance managing editorial team.\n","code":""},{"path":"editorialmanagement.html","id":"recruiting-new-editors","chapter":"9 Editorial management","heading":"9.1 Recruiting new editors","text":"Recruiting new editors maintaining sufficient well-balanced editorial board responsibility Software Review Lead, support advice editorial board.Steps:Start private channel discussion (history editors channel future editors join, awkward).Start private channel discussion (history editors channel future editors join, awkward).Ping editors sure get notification important topic.Ping editors sure get notification important topic.Wait majority editors chime inviting someone. Leave one week respond.Wait majority editors chime inviting someone. Leave one week respond.","code":""},{"path":"editorialmanagement.html","id":"inviting-a-new-editor","chapter":"9 Editorial management","heading":"9.2 Inviting a new editor","text":"Candidates might start guest editors.\ninviting guest editor, invite invite guest editor reasons.Candidates might start guest editors.\ninviting guest editor, invite invite guest editor reasons.candidate guest editor first, assess process went submission tackled. Asked editors advice .candidate guest editor first, assess process went submission tackled. Asked editors advice .Send email.Send email.","code":"We would like to invite you to join the rOpenSci editorial board as a full member. [SPECIFIC REASONS FOR INVITATION (MENTION CONTRIBUTIONS TO ROPENSCI)]. \nWe think you would make a wonderful addition to the team.\n\n[IF GUEST EDITOR:You are familiar with the editor's role as you've been a guest editor].  We aim for editors to handle four packages per year ([IF GUEST EDITOR including the one one you just finished!]).  \nWe ask that editors make an informal commitment of serving for two years, and re-evaluate their participation after that.  \nOn a short-term basis, any editor can decline to handle a package or say, \"I'm pretty busy, I can't handle a new package for a few weeks.\"\n\nIn addition to handling packages, editors weigh in on group editorial decisions, such as whether a package is in-scope, and determining updates to our policies. \nWe generally do this through Slack, which we expect editors to be able to check regularly. \nWe have editorial board calls annually.  \nWe also rotate Editor-in-Chief responsibilities (first-pass scope decisions and assigning editors) amongst the board about quarterly. \nYou'll have the opportunity to enter this rotation once you have been on the board for some time, usually at least six months. \nSome of us also take on bigger projects to improve the peer-review process, though this is entirely optional. \n\nWe hope that you'll join the board!  \nIt's an exciting time for peer-review at rOpenSci.\n\nPlease give this some thought, ask us any questions you have, and let us know whether you can join us.\n\nBest,\n[EDITOR], on behalf of the rOpenSci Editorial Board"},{"path":"editorialmanagement.html","id":"onboarding-a-new-editor","chapter":"9 Editorial management","heading":"9.3 Onboarding a new editor","text":"Inform rOpenSci community manager \neditors added rOpenSci website.\nintroduction blog post can put together.\nInform rOpenSci community manager thateditors added rOpenSci website.introduction blog post can put together.haven’t already done guest editors, request new editor turn two-factor authentication (2FA) GitHub.haven’t already done guest editors, request new editor turn two-factor authentication (2FA) GitHub.Invite editors rOpenSci GitHub organization member, member editors team data-pkg-editors stats-board sub-team, appropriate. give appropriate permissions allow get team-specific notifications.Invite editors rOpenSci GitHub organization member, member editors team data-pkg-editors stats-board sub-team, appropriate. give appropriate permissions allow get team-specific notifications.Editors need access AirTable database software review.Editors need access AirTable database software review.Editors need access private editors channel rOpenSci Slack workspace (Slack workspace general didn’t previously, case ask rOpenSci community manager).Editors need access private editors channel rOpenSci Slack workspace (Slack workspace general didn’t previously, case ask rOpenSci community manager).Post welcome message channel, pinging editors.Post welcome message channel, pinging editors.Slack workspace need added editors team @editors ping .Slack workspace need added editors team @editors ping .add editors’ names \ndev_guide authors list\ndev_guide chapter introducing software review (two locations file, editors bit remove reviewers list)\nsoftware-review README (two places file well)\ndev_guide software-review README automatically knit via continuous integration.\nadd editors’ names todev_guide authors listdev_guide chapter introducing software review (two locations file, editors bit remove reviewers list)software-review README (two places file well)\ndev_guide software-review README automatically knit via continuous integration.Add editors https://github.com/orgs/ropensci/teams/editors/membersAdd editors https://github.com/orgs/ropensci/teams/editors/members","code":""},{"path":"editorialmanagement.html","id":"offboarding-an-editor","chapter":"9 Editorial management","heading":"9.4 Offboarding an editor","text":"Thank work!Thank work!Remove editors-channel editors Slack team.Remove editors-channel editors Slack team.Remove https://github.com/orgs/ropensci/teams/editors/members sub-team.Remove https://github.com/orgs/ropensci/teams/editors/members sub-team.Inform rOpenSci community manager staff emember might moved alumni team members website.Inform rOpenSci community manager staff emember might moved alumni team members website.Remove access Airtable workspace.Remove access Airtable workspace.Remove \ndev_guide chapter introducing software review (two locations file, editors bit remove reviewers list)\nsoftware-review README (two places file well)\ndev_guide software-review README automatically knit via continuous integration.\nRemove fromdev_guide chapter introducing software review (two locations file, editors bit remove reviewers list)software-review README (two places file well)\ndev_guide software-review README automatically knit via continuous integration.","code":""},{"path":"collaboration.html","id":"collaboration","chapter":"10 Collaboration Guide","heading":"10 Collaboration Guide","text":"\ncontributors improve package, onboard package authors write permissions repo, package sustainably developed. can also enjoyable work team!\n\nchapter contains guidance collaboration, section making repo contribution- collaboration-friendly infrastructure (code conduct, contribution guidelines, issue labels); section collaborate new contributors, particular context rOpenSci’s “ropensci” GitHub organization.\n\nBesides mostly technical tips, important remember kind, take others’ perspective account especially priorities differ .\n","code":""},{"path":"collaboration.html","id":"friendlyfiles","chapter":"10 Collaboration Guide","heading":"10.1 Make your repo contribution and collaboration friendly","text":"","code":""},{"path":"collaboration.html","id":"coc-file","chapter":"10 Collaboration Guide","heading":"10.1.1 Code of conduct","text":"transfer GitHub organization, rOpenSci Code Conduct apply project.\nPlease add text READMEAnd delete package current code conduct one.","code":"Please note that this package is released with a [Contributor\nCode of Conduct](https://ropensci.org/code-of-conduct/). \nBy\ncontributing to this project, you agree to abide by its terms."},{"path":"collaboration.html","id":"contributing-guide","chapter":"10 Collaboration Guide","heading":"10.1.2 Contributing guide","text":"can use issue, pull request contributing guidelines.\ncontributing file .github/CONTRIBUTING.md docs/CONTRIBUTING.md compulsory.\neasy way insert template contributing guide use_tidy_contributing() function usethis package, inserts template .github/CONTRIBUTING.md.\nextensive example template Peter Desmet, comprehensive GitHub wiki pages mlr3 package.\ntemplates generally need modified use rOpenSci package, particularly referring linking Code Conduct, described elsewhere book.\nModifying generic contributing guide add personal touch also tends make look less generic sincere.\nPersonal preferences contributing guide include:Style preferences? might however prefer make style configuration (lintr, styler) fix code style especially don’t use popular code style like tidyverse coding style.Style preferences? might however prefer make style configuration (lintr, styler) fix code style especially don’t use popular code style like tidyverse coding style.Infrastructure like roxygen2?Infrastructure like roxygen2?Workflow preferences? Issue PR?Workflow preferences? Issue PR?scope statement, like skimr package?scope statement, like skimr package?Sandbox account creation? Mocking tests? Linking external docs?Sandbox account creation? Mocking tests? Linking external docs?rOpenSci encourages contributing guides include lifecycle statement clarifying visions expectations future development package, like example.\nStatistical packages required lifecycle statement, specified General Statistical Stanards G1.2.\nlinks provides template simple lifecycle statement.\nCONTRIBUTING.md files can also describe acknowledge contributions (see section).encourage direct feedback bug report feature request rOpenSci forum, making sure ’d see questions forum. Users can use forum ask questions use report use cases, can subscribe individual categories tags receive notifications package. Feel free mention docs package /contributing guidelines/issue template. Please direct users tag posts package name.pull request closer merged, use GitHub Actions PR workflow style code styler.","code":""},{"path":"collaboration.html","id":"issue-management","chapter":"10 Collaboration Guide","heading":"10.1.3 Issue management","text":"using GitHub features around issues can help potential contributors find , make roadmap public.","code":""},{"path":"collaboration.html","id":"issue-labelling","chapter":"10 Collaboration Guide","heading":"10.1.3.1 Issue labelling","text":"can use labels “help wanted” “good first issue” help potential collaborators, including newbies, find repo. Cf GitHub article. can also use “Beginner” label. See examples beginner issues ropensci repos.","code":""},{"path":"collaboration.html","id":"pinning-issues","chapter":"10 Collaboration Guide","heading":"10.1.3.2 Pinning issues","text":"can pin 3 issues repository appear top issue tracker nice issue cards.\ncan help advertise priorities .","code":""},{"path":"collaboration.html","id":"milestones","chapter":"10 Collaboration Guide","heading":"10.1.3.3 Milestones","text":"can create milestones assign issues , help see plan next version package instance.","code":""},{"path":"collaboration.html","id":"workingcollaborators","chapter":"10 Collaboration Guide","heading":"10.2 Working with collaborators","text":"First thing first: keep touch GitHub repository!forget watch GitHub repository notified issues pull requests (alternatively, work bursts, maybe add information contributing guide).forget watch GitHub repository notified issues pull requests (alternatively, work bursts, maybe add information contributing guide).forget push updates locally.forget push updates locally.disable failing tests fix create noise PRs can puzzle new contributors.disable failing tests fix create noise PRs can puzzle new contributors.","code":""},{"path":"collaboration.html","id":"onboarding-collaborators","chapter":"10 Collaboration Guide","heading":"10.2.1 Onboarding collaborators","text":"’s general rOpenSci rule onboard collaborators. increase rights repo gain trust, definitely acknowledge contributions (see section).can ask new collaborator make PRs (see following section assessing PR locally, .e. beyond CI checks) dev/master assess merging, let push master, although might want keep system PR reviews… even team mates!possible model onboarding collaborators provided Jim Hester lintr repo.problem recruiting collaborators, can post open call like Jim Hester’s Twitter, GitHub, rOpenSci package author, can ask help rOpenSci slack ask rOpenSci team ideas recruiting new collaborators.","code":""},{"path":"collaboration.html","id":"gitflow","chapter":"10 Collaboration Guide","heading":"10.2.2 Working with collaborators (including yourself)","text":"Branches cheap. Use extensively developing features, testing new ideas, fixing problems.One branches default / main branch, , follow trunk-based development, “merge small, frequent updates”.\nSee also GitHub flow GitLab flow docs.\nmight want pair frequent incrementing version numbers (DESCRIPTION).\nOne particular aspect working collaborators reviewing pull requests, useful guidance :Art Giving Receiving Code Reviews (Gracefully), Alex HillGitHub documentation PR reviewsFor making reviewing pull requests recommend exploring usethis functions.","code":""},{"path":"collaboration.html","id":"attributions","chapter":"10 Collaboration Guide","heading":"10.2.3 Be generous with attributions","text":"someone contributes repository consider adding DESCRIPTION, contributor (“ctb”) small contributions, author (“aut”) bigger contributions. Traditionally citing package scientific publication “aut” authors listed, “ctb” contributors; pkgdown websites “aut” names listed homepage, authors listed authors/ page.minimum consider adding name contributors near feature/bug fix line NEWS.md.recommend generous acknowledgements, nice thing make folks likely contribute package repos organization.reminder packaging guidelines package reviewed feel reviewers made substantial contribution development package, may list Authors@R field Reviewer contributor type (\"rev\"), like :include reviewers asking consent. Read blog post “Thanking Reviewers: Gratitude Semantic Metadata”. Note ‘rev’ raise CRAN NOTE unless package built using R v3.5. Make sure use roxygen2’s latest CRAN version.Please list editors contributors. participation contribution rOpenSci thanks enough!","code":"    person(\"Bea\", \"Hernández\", role = \"rev\",\n    comment = \"Bea reviewed the package (v. X.X.XX) for rOpenSci, see <https://github.com/ropensci/software-review/issues/116>\"),"},{"path":"collaboration.html","id":"welcoming-collaborators-to-ropensci","chapter":"10 Collaboration Guide","heading":"10.2.4 Welcoming collaborators to rOpenSci","text":"give someone write permissions repository,please contact staff member new contributor might get invited rOpenSci’s “ropensci” GitHub organization (instead outside collaborator)please contact staff member new contributor might get invited rOpenSci’s “ropensci” GitHub organization (instead outside collaborator)please contact rOpenSci’s community manager another staff member new contributor might get get invited rOpenSci Slack workspace.please contact rOpenSci’s community manager another staff member new contributor might get get invited rOpenSci Slack workspace.","code":""},{"path":"collaboration.html","id":"further-resources","chapter":"10 Collaboration Guide","heading":"10.3 Further resources","text":"rOpenSci community call Set Package Foster Community.re-using kind usual answers, consider GitHub’s saved replies.","code":""},{"path":"changing-maintainers.html","id":"changing-maintainers","chapter":"11 Changing package maintainers","heading":"11 Changing package maintainers","text":"\nchapter presents guidance taking maintenance package.\n","code":""},{"path":"changing-maintainers.html","id":"do-you-want-to-give-up-maintenance-of-your-package","chapter":"11 Changing package maintainers","heading":"11.1 Do you want to give up maintenance of your package?","text":"call contributors section newsletter comes every two weeks. section called Call Contributors. section highlight packages looking new maintainers. looking leave role maintainer package, get touch us can highlight package newsletter. ’ve successful thus far, finding new maintainers six six packages.","code":""},{"path":"changing-maintainers.html","id":"do-you-want-to-take-over-maintenance-of-a-package","chapter":"11 Changing package maintainers","heading":"11.2 Do you want to take over maintenance of a package?","text":"call contributors section newsletter comes every two weeks. section called Call Contributors. section highlight packages looking new maintainers. subscribed newsletter already, ’s good idea subscribe get notified ’s package looking new maintainer.","code":""},{"path":"changing-maintainers.html","id":"taking-over-maintenance-of-a-package","chapter":"11 Changing package maintainers","heading":"11.3 Taking over maintenance of a package","text":"Add new maintainer DESCRIPTION file, role = c(\"aut\", \"cre\"), make former maintainer aut .Make sure change maintainer name anywhere else package, retaining former maintainer author (e.g, package level manual file, CONTRIBUTING.md, CITATION, etc.)Collaboration Guide guidance adding new maintainers collaboratorsPackages archived orphaned CRAN don’t need permission previous maintainer taken CRAN. cases get touch us can offer help needed.package archived CRAN maintainer change, old maintainer email CRAN put writing new maintainer . Make sure mention email maintainer change submit first new version CRAN. old maintainer unreachable send email get touch rOpenSci staff.previous maintainer reachable, scheduling meeting help get “lay land”","code":""},{"path":"changing-maintainers.html","id":"faq-for-new-maintainers","chapter":"11 Changing package maintainers","heading":"11.3.1 FAQ for new maintainers","text":"unresolved issues package don’t know fix. may ask help?\ndepends; ’s different scenarios:\nold maintainer can contacted: reach , ask help;\nrOpenSci slack: good getting help specific general problems, see #package-maintenance channel;\nrOpenSci discussion forum: forum good option, feel free ask questions ;\nrOpenSci staff: feel free get touch one us via email/pinging us GitHub issues, ’ll happy help;\ncourse ’s general R help suits needs: RStudio community forum, StackOverflow, Twitter #rstats, etc.\nunresolved issues package don’t know fix. may ask help?depends; ’s different scenarios:old maintainer can contacted: reach , ask help;rOpenSci slack: good getting help specific general problems, see #package-maintenance channel;rOpenSci discussion forum: forum good option, feel free ask questions ;rOpenSci staff: feel free get touch one us via email/pinging us GitHub issues, ’ll happy help;course ’s general R help suits needs: RStudio community forum, StackOverflow, Twitter #rstats, etc.much can/change package?\ngeneral help changing code package, see Package evolution\nsection.\nthinking though , many considerations.\nmuch time spend package? limited time, ’d best focus critical tasks, whatever package question. ample amount time, goals can larger scope.\nmature package? package mature, many people likely code depends package’s API (.e., exported functions, parameters). addition, packages depend package CRAN, need check whatever changes make don’t break packages. mature package , careful need making changes, especially names exported functions, parameters, exact structure exported functions return. Changes can easily made affect internals package.much can/change package?general help changing code package, see Package evolution\nsection.thinking though , many considerations.much time spend package? limited time, ’d best focus critical tasks, whatever package question. ample amount time, goals can larger scope.mature package? package mature, many people likely code depends package’s API (.e., exported functions, parameters). addition, packages depend package CRAN, need check whatever changes make don’t break packages. mature package , careful need making changes, especially names exported functions, parameters, exact structure exported functions return. Changes can easily made affect internals package.","code":""},{"path":"changing-maintainers.html","id":"tasks-for-ropensci-staff","chapter":"11 Changing package maintainers","heading":"11.4 Tasks for rOpenSci staff","text":"organization, rOpenSci interested making sure packages suite available long useful community. maintainers need move , cases try get new maintainer package. ends, following tasks responsibility rOpenSci staff.repository hasn’t seen activity (commits, issues, pull requests) quite long time may simply mature package little need changes/etc., take account.Current maintainer responded issues/pull requests many months, via emails, GitHub issues, Slack messages:\nMake contact see situation . may say ’d like step maintainer, case look new maintainer\nMake contact see situation . may say ’d like step maintainer, case look new maintainerCurrent maintainer completely missing/responding\nhappens try contact maintainer one month. However, updating package urgent, may use admin access make changes behalf.\nhappens try contact maintainer one month. However, updating package urgent, may use admin access make changes behalf.Put call “Call Contributors” section rOpenSci newsletter new maintainer - open issue newsletter repo.","code":""},{"path":"releasing.html","id":"releasing","chapter":"12 Releasing a package","heading":"12 Releasing a package","text":"\npackage different versions time: snapshots state package can release CRAN instance. versions properly numbered, released described NEWS file. details .\n\nNote streamline process updating NEWS versioning package using fledge package.\n","code":""},{"path":"releasing.html","id":"versioning","chapter":"12 Releasing a package","heading":"12.1 Versioning","text":"strongly recommend rOpenSci packages use semantic versioning. detailed explanation available description chapter.","code":""},{"path":"releasing.html","id":"releasing-1","chapter":"12 Releasing a package","heading":"12.2 Releasing","text":"Using usethis::use_release_issue() devtools::release() help remember checks.Using usethis::use_release_issue() devtools::release() help remember checks.Git tag release every submission CRAN. infoGit tag release every submission CRAN. infoCRAN like frequent updates. said, notice major problem one week CRAN release, explain cran-comments.md try releasing newer version.CRAN like frequent updates. said, notice major problem one week CRAN release, explain cran-comments.md try releasing newer version.","code":""},{"path":"releasing.html","id":"news","chapter":"12 Releasing a package","heading":"12.3 News file","text":"NEWS file describing changes associated version makes easier users see ’s changing package might impact workflow. must add one package, make easy read.mandatory use NEWS NEWS.md file root package. recommend using NEWS.md make file browsable.Please use example NEWS file model. can find good NEWS file wild taxize package repo instance.use NEWS, add .Rbuildignore, use NEWS.mdUpdate news file every CRAN release, section package name, version date release, like (seen example NEWS file):header, put sections needed, including: NEW FEATURES, MINOR IMPROVEMENTS, BUG FIXES, DEPRECATED DEFUNCT, DOCUMENTATION FIXES special heading grouping large number changes. header, list items needed (seen example NEWS file). item give\ndescription new feature, improvement, bug fix, deprecated function/feature. Link\nrelated GitHub issue like (#12). (#12) resolve GitHub Releases link issue repo.added git tag pushed GitHub, add news items tagged version Release notes release GitHub repo title like pkgname v0.1.0. See GitHub docs creating release.New CRAN releases tweeted automatically roknowtifier written biweekly newsletter see next chapter marketing inform potential users release.guidance NEWS file suggest reading tidyverse NEWS style guide.","code":"foobar 0.2.0 (2016-04-01)\n========================="},{"path":"marketing.html","id":"marketing","chapter":"13 Marketing your package","heading":"13 Marketing your package","text":"\nhelp promoting package things keep mind.\nhear use case package, please encourage author post link discussion forum Use Cases category, tweet rOpenSci possible inclusion rOpenSci biweekly newsletter. also recommend add link use case “use cases wild” section README.hear use case package, please encourage author post link discussion forum Use Cases category, tweet rOpenSci possible inclusion rOpenSci biweekly newsletter. also recommend add link use case “use cases wild” section README.release new version package release CRAN first time,\nMake pull request R Weekly line release “New Releases” section (“New Packages” first GitHub/CRAN release).\nTweet using “#rstats” hashtag tag rOpenSci! might help contributor/user engagement. Example.\nConsider submitting short post release rOpenSci tech notes. Contact rOpenSci Community Manager, (e.g. via Slack info@ropensci.org). Refer guidelines contributing blog post).\nSubmit package lists packages CRAN Task Views, rOpenSci non-CRAN Task Views.\nrelease new version package release CRAN first time,Make pull request R Weekly line release “New Releases” section (“New Packages” first GitHub/CRAN release).Make pull request R Weekly line release “New Releases” section (“New Packages” first GitHub/CRAN release).Tweet using “#rstats” hashtag tag rOpenSci! might help contributor/user engagement. Example.Tweet using “#rstats” hashtag tag rOpenSci! might help contributor/user engagement. Example.Consider submitting short post release rOpenSci tech notes. Contact rOpenSci Community Manager, (e.g. via Slack info@ropensci.org). Refer guidelines contributing blog post).Consider submitting short post release rOpenSci tech notes. Contact rOpenSci Community Manager, (e.g. via Slack info@ropensci.org). Refer guidelines contributing blog post).Submit package lists packages CRAN Task Views, rOpenSci non-CRAN Task Views.Submit package lists packages CRAN Task Views, rOpenSci non-CRAN Task Views.choose market package giving talk meetup conference (excellent idea!)\nread article Jenny Bryan’s Mara Averick’s.choose market package giving talk meetup conference (excellent idea!)\nread article Jenny Bryan’s Mara Averick’s.","code":""},{"path":"grooming.html","id":"grooming","chapter":"14 GitHub Grooming","heading":"14 GitHub Grooming","text":"\nrOpenSci packages currently vast majority developed GitHub. tips leverage platform section making repo discoverable section marketing GitHub account going peer review.\n","code":""},{"path":"grooming.html","id":"repodiscoverability","chapter":"14 GitHub Grooming","heading":"14.1 Make your repository more discoverable","text":"","code":""},{"path":"grooming.html","id":"github-repo-topics","chapter":"14 GitHub Grooming","heading":"14.1.1 GitHub repo topics","text":"GitHub repo topics help browsing searching GitHub repos, digested codemetar rOpenSci registry keywords.recommend:Adding “r”, “r-package” “rstats” topics package repo.Adding “r”, “r-package” “rstats” topics package repo.Adding relevant topics package repo.Adding relevant topics package repo.might make suggestions package onboarded.","code":""},{"path":"grooming.html","id":"github-linguist","chapter":"14 GitHub Grooming","heading":"14.1.2 GitHub linguist","text":"GitHub linguist assign language repo based files contains. packages containing lot C++ code might get classified C++ rather R packages, fine shows need “r”, “r-package” “rstats” topics.recommend overriding GitHub linguist adding modifying .gitattributes repo two cases:store html files non standard places (docs/, e.g. vignettes/) use documentation overrides. Add *.html linguist-documentation=true .gitattributes (Example wild)store html files non standard places (docs/, e.g. vignettes/) use documentation overrides. Add *.html linguist-documentation=true .gitattributes (Example wild)repo contains code haven’t authored, e.g. JavaScript code, add inst/js/* linguist-vendored .gitattributes (Example wild)repo contains code haven’t authored, e.g. JavaScript code, add inst/js/* linguist-vendored .gitattributes (Example wild)way language classification statistics repository closely reflect source code contains, well making discoverable. Notably, linguist correctly recognize repo containing mainly R code, package won’t appear search results language:R filter. Similarly, repo listed among trending R repos.info GitHub linguist overrides .","code":""},{"path":"grooming.html","id":"marketown","chapter":"14 GitHub Grooming","heading":"14.2 Market your own account","text":"author onboarded package, now member rOpenSci’s “ropensci” GitHub organization. default, organization memberships private; see make public GitHub docs.author onboarded package, now member rOpenSci’s “ropensci” GitHub organization. default, organization memberships private; see make public GitHub docs.Even package repo transferred rOpenSci, can pin account.Even package repo transferred rOpenSci, can pin account.general recommend adding least avatar (doesn’t need face!) name GitHub profile.general recommend adding least avatar (doesn’t need face!) name GitHub profile.","code":""},{"path":"evolution.html","id":"evolution","chapter":"15 Package evolution - changing stuff in your package","heading":"15 Package evolution - changing stuff in your package","text":"\nchapter presents guidance changing stuff package: changing parameter names, changing function names, deprecating functions, even retiring archiving packages.\n\nchapter initially contributed tech note rOpenSci website Scott Chamberlain; can read original version .\n","code":""},{"path":"evolution.html","id":"philosophy-of-changes","chapter":"15 Package evolution - changing stuff in your package","heading":"15.1 Philosophy of changes","text":"Everyone’s free opinion freely parameters/functions/etc. changed library - rules package changes enforced CRAN otherwise. Generally, library gets mature, changes user facing methods (.e., exported functions R package) become rare. Libraries dependencies many libraries likely careful changes, .","code":""},{"path":"evolution.html","id":"the-lifecycle-package","chapter":"15 Package evolution - changing stuff in your package","heading":"15.2 The lifecycle package","text":"chapter presents solutions require lifecycle package might still find useful.\nrecommend reading lifecycle documentation.","code":""},{"path":"evolution.html","id":"parameters-changing-parameter-names","chapter":"15 Package evolution - changing stuff in your package","heading":"15.3 Parameters: changing parameter names","text":"Sometimes parameter names must changed clarity, reason.possible approach check deprecated arguments missing, stop providing meaningful message.want helpful, emit warning automatically take necessary action:aware parameter .... function ..., already removed parameter (lets call z), user may older code uses z. pass z, ’s parameter function definition, likely silently ignored – want. Instead, leave argument around, throwing error used.","code":"\nfoo_bar <- function(x, y) {\n    if (!missing(x)) {\n        stop(\"use 'y' instead of 'x'\")\n    }\n    y^2\n}\n\nfoo_bar(x = 5)\n#> Error in foo_bar(x = 5) : use 'y' instead of 'x' \nfoo_bar <- function(x, y) {\n    if (!missing(x)) {\n        warning(\"use 'y' instead of 'x'\")\n        y <- x\n    }\n    y^2\n}\n\nfoo_bar(x = 5)\n#> 25"},{"path":"evolution.html","id":"functions-changing-function-names","chapter":"15 Package evolution - changing stuff in your package","heading":"15.4 Functions: changing function names","text":"must change function name, gradually, change package.Let’s say function foo.However, want change function name bar.Instead simply changing function name foo longer existing straight away, first version package bar appears, make alias like:solution, user can use either foo() bar() – either thing, function.’s also useful message ’ll want throw message use old function, e.g.,users used package version (foo bar), next version can remove old function name (foo), bar.","code":"\nfoo <- function(x) x + 1\n#' foo - add 1 to an input\n#' @export\nfoo <- function(x) x + 1\n\n#' @export\n#' @rdname foo\nbar <- foo\n#' foo - add 1 to an input\n#' @export\nfoo <- function(x) {\n    warning(\"please use bar() instead of foo()\", call. = FALSE)\n    bar(x)\n}\n\n#' @export\n#' @rdname foo\nbar <- function(x) x + 1\n#' bar - add 1 to an input\n#' @export\nbar <- function(x) x + 1"},{"path":"evolution.html","id":"functions-deprecate-defunct","chapter":"15 Package evolution - changing stuff in your package","heading":"15.5 Functions: deprecate & defunct","text":"remove function package (let’s say package name helloworld), can use following protocol:Mark function deprecated package version x (e.g., v0.2.0)function , use .Deprecated() point replacement function:’s options .Deprecated specifying new function name, well new package name, makes sense moving functions different packages.message ’s given .Deprecated warning, can suppressed users suppressWarnings() desired.Make man page deprecated functions like:creates man page users can access like ?`helloworld-deprecated` ’ll see documentation index. Add functions page needed, take away function moves defunct (see ).next version (v0.3.0) can make function defunct (, completely gone package, except man page note ).function , use .Defunct() like:Note message .Defunct error function stops whereas .Deprecated uses warning let function proceed.addition, ’s good add ... defunct functions users pass parameters ’ll get defunct message instead unused argument message, like:Without ... gives:... gives:Make man page defunct functions like:creates man page users can access like ?`helloworld-defunct` ’ll see documentation index. Add functions page needed. ’ll likely want keep man page indefinitely.","code":"\nfoo <- function() {\n    .Deprecated(\"bar\")\n}\n#' Deprecated functions in helloworld\n#' \n#' These functions still work but will be removed (defunct) in the next version.\n#' \n#' \\itemize{\n#'  \\item \\code{\\link{foo}}: This function is deprecated, and will\n#'  be removed in the next version of this package.\n#' }\n#' \n#' @name helloworld-deprecated\nNULL\nfoo <- function() {\n    .Defunct(\"bar\")\n}\nfoo <- function(...) {\n    .Defunct(\"bar\")\n}\nfoo(x = 5)\n#> Error in foo(x = 5) : unused argument (x = 5)\nfoo(x = 5)\n#> Error: 'foo' has been removed from this package\n#' Defunct functions in helloworld\n#' \n#' These functions are gone, no longer available.\n#' \n#' \\itemize{\n#'  \\item \\code{\\link{foo}}: This function is defunct.\n#' }\n#' \n#' @name helloworld-defunct\nNULL"},{"path":"evolution.html","id":"testing-deprecated-functions","chapter":"15 Package evolution - changing stuff in your package","heading":"15.5.1 Testing deprecated functions","text":"don’t change tests deprecated functions made defunct.Consider changes made deprecated function. Along using .Deprecated inside function, change parameters deprecated function, create new function replaces deprecated function, etc. changes tested made.Related , deprecated function simply getting name change, perhaps test old new functions return identical results.suppressWarnings() used suppress warning thrown .Deprecated, tests user facing, bad warning thrown tests, warning even used reminder maintainer.function made defunct, tests simply removed.","code":""},{"path":"evolution.html","id":"archivalguidance","chapter":"15 Package evolution - changing stuff in your package","heading":"15.6 Archiving packages","text":"Software generally finite lifespan, packages may eventually need archived. Archived packages archived moved dedicated GitHub organization, ropensci-archive. Prior archiving, contents README file moved alternative location (“README-OLD.md”), replaced minimal contents including something like following:repo status badge “unsupported” formerly released packages, “abandoned” former concept WIP packages, case badge code replaced :example minimal README archived package ropensci-archive/monkeylearn. README copied elsewhere reduced minimal form, following steps followed:\nClose issues sentence explaining situation linking guidance.\nArchive repository GitHub (also repo settings).\nTransfer repository ropensci-archive, request rOpenSci staff member transfer (can email info@ropensci.org).Archived packages may unarchived authors new person opt resume maintenance. please contact rOpenSci. transferred ropenscilabs organization.","code":"# <package name>\n\n[![Project Status: Unsupported](https://www.repostatus.org/badges/latest/unsupported.svg)](https://www.repostatus.org/#unsupported)\n[![Peer-review badge](https://badges.ropensci.org/<issue_number>_status.svg)](https://github.com/ropensci/software-review/issues/<issue_number>)\n\nThis package has been archived. The former README is now in [README-old](<link-to-README-old>).[![Project Status: Abandoned](https://www.repostatus.org/badges/latest/abandoned.svg)](https://www.repostatus.org/#abandoned)"},{"path":"curationpolicy.html","id":"curationpolicy","chapter":"16 Package Curation Policy","heading":"16 Package Curation Policy","text":"\nchapter summarizes proposed curation policy rOpenSci’s ongoing maintenance packages developed part rOpenSci activities /rOpenSci GitHub organization. curation policy aims support goals:\n\n\nEnsure packages provided rOpenSci --date high quality\n\n\nEnsure packages provided rOpenSci --date high quality\n\n\nProvide clarity development status review status software rOpenSci repositories\n\n\nProvide clarity development status review status software rOpenSci repositories\n\n\nManage maintenance effort rOpenSci staff, package authors, volunteer contributors\n\n\nManage maintenance effort rOpenSci staff, package authors, volunteer contributors\n\n\nProvide mechanism gracefully sunset packages maintaining peer-review badging\n\n\nProvide mechanism gracefully sunset packages maintaining peer-review badging\nElements infrastructure described\nneeded implementation policy cases partly\nbuilt cases yet begun. aim adopt policy \npart prioritize work components.","code":""},{"path":"curationpolicy.html","id":"the-package-registry","chapter":"16 Package Curation Policy","heading":"16.1 The package registry","text":"rOpenSci package\nregistry\ncentral listing R packages currently formerly\nmaintained reviewed rOpenSci. contains essential package\nmetadata including development review status, \nsource data display websites, badges, etc. allow\nlisting maintained independently package \ninfrastructure hosting platforms.","code":""},{"path":"curationpolicy.html","id":"staff-maintained-packages","chapter":"16 Package Curation Policy","heading":"16.2 Staff-maintained packages","text":"Staff-maintained packages developed maintained rOpenSci staff\npart rOpenSci projects. packages may also peer-reviewed\npackages, necessarily peer reviewed. Many infrastructure\npackages fall scope peer review.Staff-maintained packages listed registry tag\n“staff_maintained” listed rOpenSci’s packages web page similar\nvenues tag “staff-maintained”Staff-maintained packages listed registry tag\n“staff_maintained” listed rOpenSci’s packages web page similar\nvenues tag “staff-maintained”packages stored “ropensci” GitHub\norganizationThese packages stored “ropensci” GitHub\norganizationStaff-maintained packages docs built rOpenSci\nsystem. system send notifications\noutputs results GitHub commit status (red check mark red cross).Staff-maintained packages docs built rOpenSci\nsystem. system send notifications\noutputs results GitHub commit status (red check mark red cross).packages fail checks, rOpenSci staff endeavor fix\nchanges, prioritizing packages based user base (downloads),\nreverse dependencies, strategic goals.packages fail checks, rOpenSci staff endeavor fix\nchanges, prioritizing packages based user base (downloads),\nreverse dependencies, strategic goals.biannual annual basis, rOpenSci review packages\nfailing month determine whether transfer “ropensci-archive” GitHub organization.biannual annual basis, rOpenSci review packages\nfailing month determine whether transfer “ropensci-archive” GitHub organization.Packages consistently failing without ongoing plan return\nactive maintenance move “archive” status. \narchived, staff packages move “ropensci-archive”\nrepository (created) gain “archived” type \nregistry. built rOpenSci system.Packages consistently failing without ongoing plan return\nactive maintenance move “archive” status. \narchived, staff packages move “ropensci-archive”\nrepository (created) gain “archived” type \nregistry. built rOpenSci system.Archived packages displayed default packages\nweb page. special tab packages pages display\n\"type\": \"archived\"\neither peer-reviewed staff-maintained.Archived packages displayed default packages\nweb page. special tab packages pages display\n\"type\": \"archived\"\neither peer-reviewed staff-maintained.Archived packages can unarchived old new maintainer\nwilling address problems wants revive \npackage. please contact rOpenSci.\ntransferred ropenscilabs organization.Archived packages can unarchived old new maintainer\nwilling address problems wants revive \npackage. please contact rOpenSci.\ntransferred ropenscilabs organization.","code":""},{"path":"curationpolicy.html","id":"peer-reviewed-packages","chapter":"16 Package Curation Policy","heading":"16.3 Peer-reviewed packages","text":"Peer-reviewed packages contributed rOpenSci \ncommunity passed peer review. need \n-scope\ntime submission reviewed.Upon acceptance, peer-reviewed packages transferred \nauthor’s GitHub “ropensci” GitHub organizationUpon acceptance, peer-reviewed packages transferred \nauthor’s GitHub “ropensci” GitHub organizationPeer-reviewed packages registry tagged \n“peer-reviewed” peer-reviewed badge README.Peer-reviewed packages registry tagged \n“peer-reviewed” peer-reviewed badge README.Peer-reviewed packages listed rOpenSci’s web page \nsimilar venues tag “peer-reviewed”Peer-reviewed packages listed rOpenSci’s web page \nsimilar venues tag “peer-reviewed”Peer-reviewed packages docs built rOpenSci\nsystem. system send notifications\noutputs results GitHub commit status (red check mark red cross).Peer-reviewed packages docs built rOpenSci\nsystem. system send notifications\noutputs results GitHub commit status (red check mark red cross).packages CRAN, package authors can choose subscribe notifications\nCRAN checks API.packages CRAN, package authors can choose subscribe notifications\nCRAN checks API.Annually bi-annually, rOpenSci staff review packages \nfailing state failing extended periods, \ncontact authors determine ongoing maintenance status \nexpected updates. Based exchange, rOpenSci may opt \nretain package’s current status expectation \nupdates, contribute support seek new maintainer, transfer\npackage “archived” status.Annually bi-annually, rOpenSci staff review packages \nfailing state failing extended periods, \ncontact authors determine ongoing maintenance status \nexpected updates. Based exchange, rOpenSci may opt \nretain package’s current status expectation \nupdates, contribute support seek new maintainer, transfer\npackage “archived” status.Based user base (measured downloads), reverse dependencies, \nrOpenSci strategic goals, rOpenSci staff may support failing\npackages via PRs reviewed package authors, direct changes\n(authors unresponsive approximately month). rOpenSci\nalso provide support package authors request, \nstaff community volunteers, based time available.Based user base (measured downloads), reverse dependencies, \nrOpenSci strategic goals, rOpenSci staff may support failing\npackages via PRs reviewed package authors, direct changes\n(authors unresponsive approximately month). rOpenSci\nalso provide support package authors request, \nstaff community volunteers, based time available.author’s request, authors unresponsive \ninquiries approximately month, rOpenSci may seek new\nmaintainer select peer-reviewed packages deems high\ncommunity value based user base/downloads, reverse\ndependencies, rOpenSci strategic goals.author’s request, authors unresponsive \ninquiries approximately month, rOpenSci may seek new\nmaintainer select peer-reviewed packages deems high\ncommunity value based user base/downloads, reverse\ndependencies, rOpenSci strategic goals.archived, packages move “ropensci” GitHub\norganization “ropensci-archive” organization (author\nGitHub accounts desired), following transfer guidance. gain “archived” type\nregistry. retain “peer-reviewed” tags \nbadges. built rOpenSci system.archived, packages move “ropensci” GitHub\norganization “ropensci-archive” organization (author\nGitHub accounts desired), following transfer guidance. gain “archived” type\nregistry. retain “peer-reviewed” tags \nbadges. built rOpenSci system.Archived packages displayed default. special tab packages\npages display “type”: “archived”`\neither peer-reviewed staff-maintained.Archived packages displayed default. special tab packages\npages display “type”: “archived”`\neither peer-reviewed staff-maintained.","code":""},{"path":"curationpolicy.html","id":"legacy-acquired-packages","chapter":"16 Package Curation Policy","heading":"16.4 Legacy acquired packages","text":"“Legacy” packages packages created maintained rOpenSci\nstaff peer reviewed, rOpenSci GitHub\norganization(s) due historical reasons. (Prior establishing \npeer review process scope, rOpenSci absorbed packages \nvarious developers without well-defined criteria.)rOpenSci transfer legacy packages back author organizations\nrepositories. authors uninterested, transfer\n“ropensci-archive” repository following transfer guidance. packages \n-scope,\nrOpenSci inquire authors like submit \nSoftware Review process.rOpenSci transfer legacy packages back author organizations\nrepositories. authors uninterested, transfer\n“ropensci-archive” repository following transfer guidance. packages \n-scope,\nrOpenSci inquire authors like submit \nSoftware Review process.Legacy packages listed package registry.Legacy packages listed package registry.Exceptions may made packages vital parts R /rOpenSci package ecosystem actively monitored staff.Exceptions may made packages vital parts R /rOpenSci package ecosystem actively monitored staff.","code":""},{"path":"curationpolicy.html","id":"incubator-packages","chapter":"16 Package Curation Policy","heading":"16.5 Incubator packages","text":"“Incubator” packages -development packages created staff \ncommunity members part community projects, created\nunconferencesIncubator packages live “ropenscilabs” organization.Incubator packages live “ropenscilabs” organization.Incubator packages appear package registry \n“incubator” tagIncubator packages appear package registry \n“incubator” tagIncubator packages appear website default, \npackages pages include “experimental packages” tab.Incubator packages appear website default, \npackages pages include “experimental packages” tab.Incubator packages docs built rOpenSci\nsystem. system send notifications\noutputs results GitHub commit status (red check mark red cross).\ndocs indicate clearly package experimental.Incubator packages docs built rOpenSci\nsystem. system send notifications\noutputs results GitHub commit status (red check mark red cross).\ndocs indicate clearly package experimental.Biannually annually, rOpenSci contact incubator maintainers\nrepositories least three months old, inquiring \ndevelopment status author preferences migration \npeer-review, ropensci-archive, author organizations. Based\nresponse, package migrated immediately, peer review\ninitiated, migration deferred next\nreview. Incubator packages migrated ropensci-archive \ndefault one year, following transfer guidance.Biannually annually, rOpenSci contact incubator maintainers\nrepositories least three months old, inquiring \ndevelopment status author preferences migration \npeer-review, ropensci-archive, author organizations. Based\nresponse, package migrated immediately, peer review\ninitiated, migration deferred next\nreview. Incubator packages migrated ropensci-archive \ndefault one year, following transfer guidance.Archived incubator packages gain “archived” type.Archived incubator packages gain “archived” type.","code":""},{"path":"curationpolicy.html","id":"incubator-non-r-packages","chapter":"16 Package Curation Policy","heading":"16.5.1 Incubator non-R-packages","text":"“incubator” organization also include non-R-package\nprojects.“incubator” organization also include non-R-package\nprojects.projects listed registry appear web\npage, automatically built.projects listed registry appear web\npage, automatically built.Migration policy R packages, \nappropriate migration locations (e.g., ropensci-books)Migration policy R packages, \nappropriate migration locations (e.g., ropensci-books)archived, non-R-packages move “ropensci-archive” following transfer guidance.archived, non-R-packages move “ropensci-archive” following transfer guidance.","code":""},{"path":"curationpolicy.html","id":"books-1","chapter":"16 Package Curation Policy","heading":"16.6 Books","text":"rOpenSci books long-form documentation, often bookdown-formatted,\nrelated rOpenSci packages, projects, themes, created \nrOpenSci staff community members.Books live “ropensci-books” organizationBooks live “ropensci-books” organizationBooks hosted books.ropensci.orgBooks hosted books.ropensci.orgBooks may mature -development, must minimal\noutlines/content migrating “ropensci-books” (e.g.\n“ropenscilabs”).Books may mature -development, must minimal\noutlines/content migrating “ropensci-books” (e.g.\n“ropenscilabs”).authorship development status book clearly\ndescribed home page README.authorship development status book clearly\ndescribed home page README.rOpenSci may provide badges templates (e.g., “development,”\n“Community Maintained,”) authors use book home pages\nfuturerOpenSci may provide badges templates (e.g., “development,”\n“Community Maintained,”) authors use book home pages\nfuture","code":""},{"path":"contributingguide.html","id":"contributingguide","chapter":"17 Contributing Guide","heading":"17 Contributing Guide","text":"\nchapter describes Contributing Guide outlines can make code non-code contributions rOpenSci project.\nwant contribute rOpenSci? Fantastic! developed rOpenSci Community Contributing Guide welcome rOpenSci help recognize potential contributor. help figure might gain giving time, expertise, experience, match needs things help rOpenSci’s mission, connect resources help along way.staff community actively foster welcoming environment users developers different backgrounds skill levels learn, share ideas innovate together openly shared norms shared software. Participation rOpenSci activities supported Code Conduct.welcome code non-code contributions new seasoned coders career stage, sector. don’t developer! Maybe want spend 30 minutes sharing package use case public forum reporting bug, one hour learning attending Community Call, five hours reviewing R package submitted open peer review, maybe want make ongoing commitment help maintain package.benefits contributing?Connect community shares interest making science openLearn people outside domain use R challenges similar yoursAsk answer new research questions getting know new software tools alliesFeel confident supported efforts write code develop softwareGain visibility open source workImprove software use buildLevel R skills help others level theirsLevel writing skillsGet exposure packageConsult Contributing Guide browse “brings ?” find want … statements fit best choose path! help recognize , ’ve grouped : Discover; Connect; Learn; Build; Help. category, list examples contributions might look like link resources details need.","code":""},{"path":"booknews.html","id":"booknews","chapter":"A NEWS","heading":"A NEWS","text":"","code":""},{"path":"booknews.html","id":"section-1","chapter":"A NEWS","heading":"A.1 0.8.0","text":"2022-06-03, Remove former references now-archived “rodev” package2022-06-03, Remove former references now-archived “rodev” package2022-05-30, Advise reviewers can also directly call @ropensci-review-bot check package2022-05-30, Advise reviewers can also directly call @ropensci-review-bot check package2022-05-27, Add Mark Padgham list authors2022-05-27, Add Mark Padgham list authors2022-05-27, Add devguider::prerelease_checklist item pre-release template (#463)2022-05-27, Add devguider::prerelease_checklist item pre-release template (#463)2022-05-13, Align version number DESCRIPTION file actual version (#443)2022-05-13, Align version number DESCRIPTION file actual version (#443)2022-05-13, Update guidelines CONTRIBUTING.md (#366, #462)2022-05-13, Update guidelines CONTRIBUTING.md (#366, #462)2022-05-09, Add section authorship included code, thanks @KlausVigo (#388).2022-05-09, Add section authorship included code, thanks @KlausVigo (#388).2022-05-09, Remove mention ‘rev’ role requiring R v3.52022-05-09, Remove mention ‘rev’ role requiring R v3.52022-05-05, Move scripts local inst directory ropensci-org/devguider pkg.2022-05-05, Move scripts local inst directory ropensci-org/devguider pkg.2022-05-03, Update package archiving guidance reduce README minimal form.2022-05-03, Update package archiving guidance reduce README minimal form.2022-04-29, Advise authors can directly call @ropensci-review-bot check package.2022-04-29, Advise authors can directly call @ropensci-review-bot check package.2022-04-29, Describe pkgcheck-action CI section.2022-04-29, Describe pkgcheck-action CI section.2022-04-29, Update scope policies section include statistical software.2022-04-29, Update scope policies section include statistical software.2022-04-29, Add prelease.R script open pre-release GitHub issue & ref appendix.2022-04-29, Add prelease.R script open pre-release GitHub issue & ref appendix.2022-04-26, Add GitHub 2FA recommendation package security.2022-04-26, Add GitHub 2FA recommendation package security.2022-03-29, Remove references Stef Butland, former community manager.2022-03-29, Remove references Stef Butland, former community manager.2022-03-28, Add comments submission planning time commitment.2022-03-28, Add comments submission planning time commitment.2022-03-24, Remove approval comment template (coz ’s automatically generated bot now).2022-03-24, Remove approval comment template (coz ’s automatically generated bot now).2022-03-21, rephrase CITATION guidance make less strict. Also mentions CITATION.cff cffr package.2022-03-21, rephrase CITATION guidance make less strict. Also mentions CITATION.cff cffr package.2022-03-08, add links blogs related package development (#389).2022-03-08, add links blogs related package development (#389).2022-02-17, update redirect instructions (@peterdesmet, #387).2022-02-17, update redirect instructions (@peterdesmet, #387).2022-02-14, link Michael Lynch’s post Good Developers Write Bad Unit Tests.2022-02-14, link Michael Lynch’s post Good Developers Write Bad Unit Tests.2022-02-14, mention packages testing like dittodb, vcr, httptest, httptest2, webfakes.2022-02-14, mention packages testing like dittodb, vcr, httptest, httptest2, webfakes.2022-01-10, make review templates R Markdown files (@Bisaloo, #340).2022-01-10, make review templates R Markdown files (@Bisaloo, #340).2022-01-14, update guidance CI services (#377)2022-01-14, update guidance CI services (#377)2022-01-11, update guidance around branches, resources suggested @ha0ye @statnmap.2022-01-11, update guidance around branches, resources suggested @ha0ye @statnmap.2022-01-10, divide author’s guide sub-sections, add extra info including pkgcheck.2022-01-10, divide author’s guide sub-sections, add extra info including pkgcheck.2021-11-30, adds links examples reviews, especially tough constructive ones (help @noamross, @mpadge, #363).2021-11-30, adds links examples reviews, especially tough constructive ones (help @noamross, @mpadge, #363).2021-11-19, add recommended spatial packages scaffolding section (software-review-meta#47)2021-11-19, add recommended spatial packages scaffolding section (software-review-meta#47)2021-11-18, update advice grouping functions pkgdown output (#361)2021-11-18, update advice grouping functions pkgdown output (#361)","code":""},{"path":"booknews.html","id":"section-2","chapter":"A NEWS","heading":"A.2 0.7.0","text":"2021-11-04, add mentions stat software review software review intro first book page (#342).2021-11-04, add mentions stat software review software review intro first book page (#342).2021-11-04, mention pkgcheck author guide ((mpadge?), #343).2021-11-04, mention pkgcheck author guide ((mpadge?), #343).2021-11-04, add editors’ responsibilities including Editor etiquette commenting packages aren’t handling/reviewing ((jhollist?), #354).2021-11-04, add editors’ responsibilities including Editor etiquette commenting packages aren’t handling/reviewing ((jhollist?), #354).2021-11-04, give precise examples tools installation instructions (remotes, pak, R-universe).2021-11-04, give precise examples tools installation instructions (remotes, pak, R-universe).2021-11-04, add bot guidance (less work editors).2021-11-04, add bot guidance (less work editors).2021-10-07, add guidance editorial management (recruiting, inviting, onboarding, offboarding editors).2021-10-07, add guidance editorial management (recruiting, inviting, onboarding, offboarding editors).2021-09-14, add requirement least one HTML vignette.2021-09-14, add requirement least one HTML vignette.2021-09-03, add recommendations around git. ((annakrystalli?), #341)2021-09-03, add recommendations around git. ((annakrystalli?), #341)2021-07-14, clarify categories data extraction munging adding examples. ((noamross?), #337)2021-07-14, clarify categories data extraction munging adding examples. ((noamross?), #337)2021-05-20, add guidance around setting package foster community, inspired recent rOpenSci community call. (help @Bisaloo, #289, #308)2021-05-20, add guidance around setting package foster community, inspired recent rOpenSci community call. (help @Bisaloo, #289, #308)2021-04-27, longer ask reviewers ask covr ’ll done automatic tools, ask pay attention tests skipped.2021-04-27, longer ask reviewers ask covr ’ll done automatic tools, ask pay attention tests skipped.2021-04-02, add citation guidance.2021-04-02, add citation guidance.2021-04-02, stop asking reviewers run goodpractice part editorial checks.2021-04-02, stop asking reviewers run goodpractice part editorial checks.2021-03-23, launched new form reviewer volunteering.2021-03-23, launched new form reviewer volunteering.2021-02-24, add guidance around use @ropensci-review-bot.2021-02-24, add guidance around use @ropensci-review-bot.","code":""},{"path":"booknews.html","id":"section-3","chapter":"A NEWS","heading":"A.3 0.6.0","text":"2021-02-04, add guidance enforce package versioning tracking changes review (@annakrystalli, #305)2021-02-04, add guidance enforce package versioning tracking changes review (@annakrystalli, #305)2021-01-25, add translation review template Spanish (@Fvd, @maurolepore, #303)2021-01-25, add translation review template Spanish (@Fvd, @maurolepore, #303)2021-01-25, book now better citation guidance case want cite guide (@Bisaloo, #304).2021-01-25, book now better citation guidance case want cite guide (@Bisaloo, #304).2021-01-12, add guidance escaping examples (#290).2021-01-12, add guidance escaping examples (#290).2021-01-12, mention lifecycle package chapter package evolution (#287).2021-01-12, mention lifecycle package chapter package evolution (#287).2021-01-12, require overlap information put documentation (#292).2021-01-12, require overlap information put documentation (#292).2021-01-12, start using bookdown::bs4_book() template.2021-01-12, start using bookdown::bs4_book() template.2021-01-12, add sentence whether acceptable push new version package CRAN within two weeks recent version just made aware , fixed, major bug (@sckott, #283)2021-01-12, add sentence whether acceptable push new version package CRAN within two weeks recent version just made aware , fixed, major bug (@sckott, #283)2021-01-12, mention HTTP testing R book.2021-01-12, mention HTTP testing R book.2021-01-12, mention testthat snapshot tests.2021-01-12, mention testthat snapshot tests.2021-01-12, remove mentions Travis CI link Jeroen Ooms’ blog post moving away Travis.2021-01-12, remove mentions Travis CI link Jeroen Ooms’ blog post moving away Travis.2021-01-12, update package curation policy: mention possible exception legacy packages vital parts R /rOpenSci package ecosystem actively monitored staff. (@noamross, #293)2021-01-12, update package curation policy: mention possible exception legacy packages vital parts R /rOpenSci package ecosystem actively monitored staff. (@noamross, #293)","code":""},{"path":"booknews.html","id":"section-4","chapter":"A NEWS","heading":"A.4 0.5.0","text":"2020-10-08, add help link checking (@sckott, #281)2020-10-08, add help link checking (@sckott, #281)2020-10-08, update JOSS instructions (@karthik, #276)2020-10-08, update JOSS instructions (@karthik, #276)2020-10-05, add links licence resources (@annakrystalli, #279)2020-10-05, add links licence resources (@annakrystalli, #279)2020-10-05, update information contributing guide (@stefaniebutland, #280)2020-10-05, update information contributing guide (@stefaniebutland, #280)2020-09-11, make reviewer approval separate template (@bisaloo, #264)2020-09-11, make reviewer approval separate template (@bisaloo, #264)2020-09-22, add package curation policy (@noamross, #263)2020-09-22, add package curation policy (@noamross, #263)2020-09-11, add guidance requirements docs submission (@annakrystalli, #261)2020-09-11, add guidance requirements docs submission (@annakrystalli, #261)2020-09-14, add guidance describing data source DESCRIPTION (@mpadge, #260)2020-09-14, add guidance describing data source DESCRIPTION (@mpadge, #260)2020-09-14, add guidance tests deprecated functions (@sckott, #213)2020-09-14, add guidance tests deprecated functions (@sckott, #213)2020-09-11, update CI guidance (@bisaloo, @mcguinlu, #269)2020-09-11, update CI guidance (@bisaloo, @mcguinlu, #269)2020-09-11, improve redirect guidance (@jeroen, @mcguinlu, #269)2020-09-11, improve redirect guidance (@jeroen, @mcguinlu, #269)","code":""},{"path":"booknews.html","id":"section-5","chapter":"A NEWS","heading":"A.5 0.4.0","text":"2020-04-02, give less confusing code conduct guidance: reviewed packages’ COC rOpenSci COC (@Bisaloo, @cboettig, #240)2020-04-02, give less confusing code conduct guidance: reviewed packages’ COC rOpenSci COC (@Bisaloo, @cboettig, #240)2020-03-27, add section Ethics, Data Privacy Human Subjects Research Policies chapter2020-03-27, add section Ethics, Data Privacy Human Subjects Research Policies chapter2020-03-12, mention GitHub Actions CI provider.2020-03-12, mention GitHub Actions CI provider.2020-02-24, add guide inviting guest editor.2020-02-24, add guide inviting guest editor.2020-02-14, add mentions ropensci-books GitHub organisation associated subdomain.2020-02-14, add mentions ropensci-books GitHub organisation associated subdomain.2020-02-10, add field laboratory reproducibility tools category scope.2020-02-10, add field laboratory reproducibility tools category scope.2020-02-10, add guidance secrets package development security chapter.2020-02-10, add guidance secrets package development security chapter.2020-02-06, add guidance Bioconductor dependencies (#246).2020-02-06, add guidance Bioconductor dependencies (#246).2020-02-06, add package logo guidance (#217).2020-02-06, add package logo guidance (#217).2020-02-06, add one CRAN gotcha: single quoting software names(#245, @aaronwolen)2020-02-06, add one CRAN gotcha: single quoting software names(#245, @aaronwolen)2020-02-06, improve guidance regarding replacement “older” pkgdown website links source (#241, @cboettig)2020-02-06, improve guidance regarding replacement “older” pkgdown website links source (#241, @cboettig)2020-02-06, rephrase EiC role (#244).2020-02-06, rephrase EiC role (#244).2020-02-06, remove recommendation add rOpenSci footer (https://github.com/ropensci/software-review-meta/issues/79).2020-02-06, remove recommendation add rOpenSci footer (https://github.com/ropensci/software-review-meta/issues/79).2020-02-06, remove recommendation add review mention DESCRIPTION recommends mentioning package version reviewers added “rev” authors.2020-02-06, remove recommendation add review mention DESCRIPTION recommends mentioning package version reviewers added “rev” authors.2020-01-30, slightly changes advice documentation re-use: add con; mention @includeRmd @example; correct location Rmd fragments (#230).2020-01-30, slightly changes advice documentation re-use: add con; mention @includeRmd @example; correct location Rmd fragments (#230).2020-01-30, add guidance editor charge dev guide release (#196, #205).2020-01-30, add guidance editor charge dev guide release (#196, #205).2020-01-22, add guidance editor guide transferred repositories.2020-01-22, add guidance editor guide transferred repositories.2020-01-22, clarify forum guidance (use cases general).2020-01-22, clarify forum guidance (use cases general).2020-01-22, mention approach pre-computing vignettes pkgdown website might get build rOpenSci docs server.2020-01-22, mention approach pre-computing vignettes pkgdown website might get build rOpenSci docs server.2020-01-22, document use mathjax rotemplate (@Bisaloo, #199).2020-01-22, document use mathjax rotemplate (@Bisaloo, #199).2020-01-20, add guidance -thread interaction COIs (@noamross, #197).2020-01-20, add guidance -thread interaction COIs (@noamross, #197).2020-01-20, add advice specifying dependency minimum versions (@karthik, @annakrystalli, #185).2020-01-20, add advice specifying dependency minimum versions (@karthik, @annakrystalli, #185).2020-01-09, start using GitHub actions instead Travis deployment.2020-01-09, start using GitHub actions instead Travis deployment.-2019-12-11, add note Documentation sub-section Packaging Guide section referencing new R6 support roxygen2 (ropensci/dev_guide#189)-2019-12-11, add note Documentation sub-section Packaging Guide section referencing new R6 support roxygen2 (ropensci/dev_guide#189)2019-12-11, add new CRAN gotcha ‘R’ ‘R’ package title (@bisaloo, ropensci/dev_guide#221)2019-12-11, add new CRAN gotcha ‘R’ ‘R’ package title (@bisaloo, ropensci/dev_guide#221)","code":""},{"path":"booknews.html","id":"section-6","chapter":"A NEWS","heading":"A.6 0.3.0","text":"2019-10-03, include approval template maintainers include link docs.ropensci.org/pkg site (ropensci/dev_guide#191)2019-10-03, include approval template maintainers include link docs.ropensci.org/pkg site (ropensci/dev_guide#191)2019-09-26, add instructions handling editors nominate packages blog posts (ropensci/dev_guide#180)2019-09-26, add instructions handling editors nominate packages blog posts (ropensci/dev_guide#180)2019-09-26, add chapter changing package maintainers (ropensci/dev_guide#128) (ropensci/dev_guide#194)2019-09-26, add chapter changing package maintainers (ropensci/dev_guide#128) (ropensci/dev_guide#194)2019-09-26, update Slack room use editors (ropensci/dev_guide#193)2019-09-26, update Slack room use editors (ropensci/dev_guide#193)2019-09-11, update instructions README rendering book locally (ropensci/dev_guide#192)2019-09-11, update instructions README rendering book locally (ropensci/dev_guide#192)2019-08-05, update JOSS submission instructions (ropensci/dev_guide#187)2019-08-05, update JOSS submission instructions (ropensci/dev_guide#187)2019-07-22, break “reproducibility” category policies component parts. (ropensci/software-review-meta#81)2019-07-22, break “reproducibility” category policies component parts. (ropensci/software-review-meta#81)2019-06-18, add link rOpenSci community call “Security R” security chapter.2019-06-18, add link rOpenSci community call “Security R” security chapter.2019-06-17, fix formatting Appendices B-D pdf version book (bug report @IndrajeetPatil, #179)2019-06-17, fix formatting Appendices B-D pdf version book (bug report @IndrajeetPatil, #179)2019-06-17, add suggestion use R Markdown hunks approach README vignette share content. (ropensci/dev_guide#161)2019-06-17, add suggestion use R Markdown hunks approach README vignette share content. (ropensci/dev_guide#161)2019-06-17, add mention central building documentation websites.2019-06-17, add mention central building documentation websites.2019-06-13, add explanations CRAN checks. (ropensci/dev_guide#177)2019-06-13, add explanations CRAN checks. (ropensci/dev_guide#177)2019-06-13, add mentions rodev helper functions relevant.2019-06-13, add mentions rodev helper functions relevant.2019-06-13, add recommendation using cat str.*() methods. RStudio assumes str uses cat, loading R object str prints console RStudio doesn’t show correct object structure properties. ([@mattfidler] (https://github.com/mattfidler/) #178)2019-06-13, add recommendation using cat str.*() methods. RStudio assumes str uses cat, loading R object str prints console RStudio doesn’t show correct object structure properties. ([@mattfidler] (https://github.com/mattfidler/) #178)2019-06-12, add details git flow.2019-06-12, add details git flow.2019-06-12, remove recommendation roxygen2 dev version since latest stable version needed. (@bisaloo, #165)2019-06-12, remove recommendation roxygen2 dev version since latest stable version needed. (@bisaloo, #165)2019-06-11, add mention usethis functions adding testing vignette infrastructure part dependencies package building guide.2019-06-11, add mention usethis functions adding testing vignette infrastructure part dependencies package building guide.2019-06-10, use new URL dev guide, https://devguide.ropensci.org/2019-06-10, use new URL dev guide, https://devguide.ropensci.org/2019-05-27, add info importance repo recognized R package linguist (@bisaloo, #172)2019-05-27, add info importance repo recognized R package linguist (@bisaloo, #172)2019-05-22, update links eligible HTTPS update links latest versions Hadley Wickham Jenny Bryan’s books (@bisaloo, #167)2019-05-22, update links eligible HTTPS update links latest versions Hadley Wickham Jenny Bryan’s books (@bisaloo, #167)2019-05-15, add book release guidance editors. (ropensci/dev_guide#152)2019-05-15, add book release guidance editors. (ropensci/dev_guide#152)","code":""},{"path":"booknews.html","id":"section-7","chapter":"A NEWS","heading":"A.7 0.2.0","text":"2019-05-23, add CRAN gotcha: Description field DESCRIPTION file, enclose URLs angle brackets.2019-05-23, add CRAN gotcha: Description field DESCRIPTION file, enclose URLs angle brackets.2019-05-13, add content chapter contributing.2019-05-13, add content chapter contributing.2019-05-13, add precise instructions blog posts approval template editors.2019-05-13, add precise instructions blog posts approval template editors.2019-05-13, add policies allowing using either <- = within package long whole package consistent.2019-05-13, add policies allowing using either <- = within package long whole package consistent.2019-05-13, add request people tell us use standards/checklists reviewing software elsewhere.2019-05-13, add request people tell us use standards/checklists reviewing software elsewhere.2019-04-29, add requirement advice testing packages using devel oldrel R versions Travis.2019-04-29, add requirement advice testing packages using devel oldrel R versions Travis.2019-04-23, add sentence generous attributions info ctb vs aut.2019-04-23, add sentence generous attributions info ctb vs aut.2019-04-23, add link Daniel Nüst’s notes migration XML xml2.2019-04-23, add link Daniel Nüst’s notes migration XML xml2.2019-04-22, add use rOpenSci forum maintenance section.2019-04-22, add use rOpenSci forum maintenance section.2019-04-22, ask reviewer consent added DESCRIPTION review template.2019-04-22, ask reviewer consent added DESCRIPTION review template.2019-04-22, use darker blue links (feedback @kwstat, #138).2019-04-22, use darker blue links (feedback @kwstat, #138).2019-04-22, add book cover.2019-04-22, add book cover.2019-04-08, improve formatting link text README (@katrinleinweber, #137)2019-04-08, improve formatting link text README (@katrinleinweber, #137)2019-03-25, add favicon (@wlandau, #136).2019-03-25, add favicon (@wlandau, #136).2019-03-21, improve Travis CI guidance, including link examples. (@mpadge, #135)2019-03-21, improve Travis CI guidance, including link examples. (@mpadge, #135)2019-02-07, simplify code examples Package Evolution section (maintenance_evolution.Rmd file) (@hadley, #129).2019-02-07, simplify code examples Package Evolution section (maintenance_evolution.Rmd file) (@hadley, #129).2019-02-07, added PDF file export (request @IndrajeetPatil, #131).2019-02-07, added PDF file export (request @IndrajeetPatil, #131).","code":""},{"path":"booknews.html","id":"section-8","chapter":"A NEWS","heading":"A.8 0.1.5","text":"2019-02-01, created .zenodo.json explicitly set editors authors.","code":""},{"path":"booknews.html","id":"first-release-0.1.0","chapter":"A NEWS","heading":"A.9 First release 0.1.0","text":"2019-01-23, add details requirements packages running major platforms added new section package categories.2019-01-23, add details requirements packages running major platforms added new section package categories.2019-01-22, add details guide authors development stage submit package.2019-01-22, add details guide authors development stage submit package.2018-12-21, inclusion explicit policy conflict interest (reviewers editors).2018-12-21, inclusion explicit policy conflict interest (reviewers editors).2018-12-18, added guidance editor look reviewers.2018-12-18, added guidance editor look reviewers.2018-12-04, onboarding renamed Software Peer Review.2018-12-04, onboarding renamed Software Peer Review.","code":""},{"path":"booknews.html","id":"place-holder-0.0.1","chapter":"A NEWS","heading":"A.10 place-holder 0.0.1","text":"Added NEWS.md file track changes book.","code":""},{"path":"reviewtemplate.html","id":"reviewtemplate","chapter":"B Review template","heading":"B Review template","text":"can save R Markdown file, delete YAML save Markdown file.","code":"---\ntitle: \"review\"\noutput: \n  rmarkdown::md_document:\n    pandoc_args: [\n      \"--wrap=none\"\n    ]\n---\n\n## Package Review\n\n*Please check off boxes as applicable, and elaborate in comments below.  Your review is not limited to these topics, as described in the reviewer guide*\n\n- **Briefly describe any working relationship you have (had) with the package authors.**\n- [ ] As the reviewer I confirm that there are no [conflicts of interest](https://devguide.ropensci.org/policies.html#coi) for me to review this work (if you are unsure whether you are in conflict, please speak to your editor _before_ starting your review).\n\n#### Documentation\n\nThe package includes all the following forms of documentation:\n\n- [ ] **A statement of need:** clearly stating problems the software is designed to solve and its target audience in README\n- [ ] **Installation instructions:** for the development version of package and any non-standard dependencies in README\n- [ ] **Vignette(s):** demonstrating major functionality that runs successfully locally\n- [ ] **Function Documentation:** for all exported functions\n- [ ] **Examples:** (that run successfully locally) for all exported functions\n- [ ] **Community guidelines:** including contribution guidelines in the README or CONTRIBUTING, and DESCRIPTION with `URL`, `BugReports` and `Maintainer` (which may be autogenerated via `Authors@R`).\n\n#### Functionality\n\n- [ ] **Installation:** Installation succeeds as documented.\n- [ ] **Functionality:** Any functional claims of the software been confirmed.\n- [ ] **Performance:** Any performance claims of the software been confirmed.\n- [ ] **Automated tests:** Unit tests cover essential functions of the package and a reasonable range of inputs and conditions. All tests pass on the local machine.\n- [ ] **Packaging guidelines**: The package conforms to the rOpenSci packaging guidelines.\n\nEstimated hours spent reviewing:\n\n- [ ] Should the author(s) deem it appropriate, I agree to be acknowledged as a package reviewer (\"rev\" role) in the package DESCRIPTION file.\n\n---\n\n### Review Comments"},{"path":"reviewtemplatees.html","id":"reviewtemplatees","chapter":"C Review template in Spanish","heading":"C Review template in Spanish","text":"can save R Markdown file, delete YAML save Markdown file.","code":"---\ntitle: \"review\"\noutput: \n  rmarkdown::md_document:\n    pandoc_args: [\n      \"--wrap=none\"\n    ]\n---\n\n## Revisión de un paquete\n\n*Por favor trata de marcar tantas casillas como te sea posible y elabora tus argumentos en comentarios abajo de cada una. Tu revisión no esta limitada a estos temas, tal como se describe en la guia para revisores (Reviewer Guide)*\n\n**Por favor describe cualquier relación de trabajo que tengas/hayas tenido con los autores del paquete)**\n\n- [ ] Como revisor confirmo que no tengo [conflictos de interés](https://devguide.ropensci.org/policies.html#coi) para poder hacer la revisión de este trabajo (si no estas segura si tienes un conflicto por favor entra en contacto con tu editor _antes_ de arrancar con la revisión.\n\n#### Documentación\n\nEl paquete incluye todos los siguiente tipos de documentación:\n\n- [ ] **Una declaración de necesidades** que claramente describe las necesidades que el software esta diseñado a resolver y el public meta que busca atender en el archivo README\n- [ ] **Instrucciones de instalación** de la versión en desarrollo del paquete incluyendo cualquier dependencia no-estándar en el archivo README\n- [ ] **Viñeta(s)** demostrando la funcionalidad principal que ademas corren localmente\n- [ ] **Documentación de las funciones** exportadas\n- [ ] **Ejemplos** (que corren localmente) para todas las funciones exportadas \n- [ ] **Directrices comunitarias** incluyendo una guia de contribución en el archivo README o el archivo CONTRIBUTING y un archivo DESCRIPTION que incluye `URL`, `BugReports` and `Maintainer` (todas en inglés por concenvión y para que puedan ser autogeneradas con `Authors@R`).\n\n#### Funcionalidad\n\n- [ ] **Instalación:** La instalación se completa con éxito tal como fue documentada.\n- [ ] **Funcionalidad:** Toda afirmación de funcionalidad del software se confirma como existente.\n- [ ] **Desempeño:** Toda afirmación de desempeño del software se confirma como alcanzada.\n- [ ] **Pruebas automáticas:** Hay pruebas unitarias que cubren las funciones esenciales dentro del paquete con un rango razonable de entradas y condiciones. Todas las pruebas corren en la maquina local.\n- [ ] **Directrices de empaque**: El paquete cumple con las directrices de empaque de rOpenSci.\n\nEstimación de horas dedicadas a la revisión:\n\n- [ ] Si la o las persona(s) autora(s) lo considera(n) apropiado, yo estoy de acuerdo con que me reconozcan como revisor del paquete (el rol \"rev') en la el archivo DESCRIPTION del paquete.\n\n---\n\n### Comentarios de la revisión"},{"path":"editortemplate.html","id":"editortemplate","chapter":"D Editor’s template","heading":"D Editor’s template","text":"","code":"\n### Editor checks:\n\n- [ ] **Documentation**: The package has sufficient documentation available online (README, pkgdown docs) to allow for an assessment of functionality and scope without installing the package. In particular,\n    - [ ] Is the case for the package well made?\n    - [ ] Is the reference index page clear (grouped by topic if necessary)?\n    - [ ] Are vignettes readable, sufficiently detailed and not just perfunctory?\n- [ ] **Fit**: The package meets criteria for [fit](https://devguide.ropensci.org/policies.html#package-categories) and [overlap](https://devguide.ropensci.org/policies.html#overlap).\n- [ ] **Installation instructions:** Are installation instructions clear enough for human users?\n- [ ] **Tests**: If the package has some interactivity / HTTP / plot production etc. are the tests using [state-of-the-art tooling](https://devguide.ropensci.org/building.html#testing)?\n- [ ] **Contributing information**: Is the documentation for contribution clear enough e.g. tokens for tests, playgrounds?\n- [ ] **License:** The package has a CRAN or OSI accepted license.\n- [ ] **Project management**: Are the issue and PR trackers in a good shape, e.g. are there outstanding bugs, is it clear when feature requests are meant to be tackled?\n---\n\n#### Editor comments\n\n---"},{"path":"reviewrequesttemplate.html","id":"reviewrequesttemplate","chapter":"E Review request template","heading":"E Review request template","text":"Editors may make use e-mail template recruiting reviewers.","code":"\nDear [REVIEWER]\n\nHi, this is [EDITOR]. [FRIENDLY BANTER]. I'm writing to ask if you would be willing to review a package for rOpenSci. As you probably know, rOpenSci conducts peer review of R packages contributed to our collection in a manner similar to journals.\n\nThe package, [PACKAGE] by [AUTHOR(S)], does [FUNCTION]. You can find it on GitHub here: [REPO LINK]. We conduct our open review process via GitHub as well, here: [ONBOARDING ISSUE]\n\nIf you accept, note that we ask reviewers to complete reviews in three weeks. (We’ve found it takes a similar amount of time to review a package as an academic paper.)\n\nOur [reviewers guide] details what we look for in a package review, and includes links to example reviews. Our standards are detailed in our [packaging guide], and we provide a reviewer [template] for you to use. Please make sure you do not have a [conflict of interest](https://devguide.ropensci.org/policies.html#coi) preventing you from reviewing this package. If you have questions or feedback, feel free to ask me or post to the [rOpenSci forum].\n\nAre you able to review? If you can not, suggestions for alternate reviewers are always helpful. If I don't hear from you within a week, I will assume you are unable to\nreview at this time.\n\nThank you for your time.\n\nSincerely,\n\n[EDITOR]\n\n[reviewers guide]: https://devguide.ropensci.org/reviewerguide.html\n[packaging guide]: https://devguide.ropensci.org/building.html\n[template]: https://devguide.ropensci.org/reviewtemplate.html\n[rOpenSci forum]: https://discuss.ropensci.org/"},{"path":"approval2template.html","id":"approval2template","chapter":"F Reviewer approval comment template","heading":"F Reviewer approval comment template","text":"","code":"\n## Reviewer Response\n\n\n#### Final approval (post-review)\n\n- [ ] **The author has responded to my review and made changes to my satisfaction. I recommend approving this package.**\n\n<!--Please update the estimate below.-->\n\nEstimated hours spent reviewing:"},{"path":"newstemplate.html","id":"newstemplate","chapter":"G NEWS template","heading":"G NEWS template","text":"","code":"\nfoobar 0.2.0 (2016-04-01)\n=========================\n\n### NEW FEATURES\n\n  * New function added `do_things()` to do things (#5)\n\n### MINOR IMPROVEMENTS\n\n  * Improved documentation for `things()` (#4)\n\n### BUG FIXES\n\n  * Fix parsing bug in `stuff()` (#3)\n\n### DEPRECATED AND DEFUNCT\n\n  * `hello_world()` now deprecated and will be removed in a\n     future version, use `hello_mars()`\n\n### DOCUMENTATION FIXES\n\n  * Clarified the role of `hello_mars()` vs. `goodbye_mars()`\n\n\n### (a special: any heading grouping a large number of changes under one thing)\n\n    * blablabla.\n\nfoobar 0.1.0 (2016-01-01)\n=========================\n\n### NEW FEATURES\n\n  * released to CRAN"},{"path":"bookreleaseissue.html","id":"bookreleaseissue","chapter":"H Book release guidance","heading":"H Book release guidance","text":"Editors preparing release can run prelease.R script inst directory repository automatically open GitHub issue checkpoints current issues assigned upcoming release milestone, along following checklist.\nrunning script, please manually check assignment issues milestone.\nrun one month prior planned release.","code":"\n## Release book version <insert version>\n\n### Repo maintenance between releases\n\n- [ ] Look at the issue tracker for [the dev guide](https://github.com/ropensci/dev_guide/issues) and for [software review meta](https://github.com/ropensci/software-review-meta/issues) for changes still to be made in the dev guide. Assign dev guide issues to milestones corresponding to versions, either the next one or the one after that, e.g. [version 0.3.0](https://github.com/ropensci/dev_guide/milestone/2). Encourage PRs, have them reviewed.\n\n### 1 month prior to release\n\n- [ ] Remind editors to open issues/PRs for items they want to see in the next version.\n\n- [ ] Run [the `devguide_prerelease()` function](https://github.com/ropensci-org/devguider) from the `devguider` package.\n\n- [ ] Ask editors for any feedback you need from them before release.\n\n- [ ] For each contribution/change make sure the NEWS in Appendix.Rmd were updated.\n\n- [ ] Plan a date for release in communication with rOpenSci's Community Manager who will give you a date for publishing a blog post / tech note.\n\n### 2 weeks prior to release\n\n- [ ] Draft a blog post / tech note about the release with enough advance for editors and then Community Manager to review it (2 weeks). [Example](https://github.com/ropensci/roweb3/pull/291), [General blog post instructions](https://github.com/ropensci/roweb2#contributing-a-blog-post), [specific instructions for release posts](#releaseblogpost). \n\n- [ ] Make a PR from the dev branch to the master branch, ping editors on GitHub and Slack. Mention the blog post draft in a comment on this PR.\n\n### Release\n\n- [ ] Check URLs using [the `devguide_urls()` function from the {devguider} package](https://github.com/ropensci-org/devguider)\n\n- [ ] Check spelling using [the `devguide_spelling()` function from the {devguider} package](https://github.com/ropensci-org/devguider). Update the [WORDLIST](https://github.com/ropensci/dev_guide/blob/master/inst/WORDLIST) as necessary.\n\n- [ ] Squash and merge the PR from dev to master.\n\n- [ ] GitHub release, check Zenodo release.\n\n- [ ] Re-build (for Zenodo metadata update in the book) or wait for daily build\n\n- [ ] Re-create the dev branch\n\n- [ ] Finish your blog post / tech note PR. Underline the most important aspects to be highlighted in tweets as part of the PR discussion."},{"path":"redirect.html","id":"redirect","chapter":"I How to set a redirect","heading":"I How to set a redirect","text":"","code":""},{"path":"redirect.html","id":"non-github-pages-site-e.g.-netlify","chapter":"I How to set a redirect","heading":"I.1 Non GitHub pages site (e.g. Netlify)","text":"Replace content current website index.html 404.html files containing:","code":"<html>\n<head>\n<meta http-equiv=\"refresh\" content=\"0;URL=https://docs.ropensci.org/<pkgname>/\">  \n<\/head>\n<\/html>"},{"path":"redirect.html","id":"github-pages","chapter":"I How to set a redirect","heading":"I.2 GitHub pages","text":"can setup redirect main user gh-pages repository:create new repository (don’t one yet): https://github.com/<username>/<username>.github.io.repository create directory <pkgname> containing 2 files: index.html 404.html file, redirect new location (see previous subsection).Test https://<username>.github.io/<pkgname>/index.html now redirects.","code":""}]
